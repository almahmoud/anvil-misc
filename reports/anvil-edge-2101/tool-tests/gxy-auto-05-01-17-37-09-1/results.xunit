<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Test Results (powered by Planemo)"
           tests="87"
           errors="3"
           failures="1"
           skip="0">
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #1)" name="0" time="63.18952202796936">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/c/3/e/dataset_c3e87384-5901-4793-98d5-f5bbb9dfdcc0.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15Getting block 2 of 15  Reserving size (1554) for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 1  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 2: 20%  bucket 1: 20%  bucket 2: 30%  bucket 1: 30%  bucket 2: 40%  bucket 1: 40%  bucket 2: 50%  bucket 1: 50%  bucket 1: 60%  bucket 2: 60%  bucket 1: 70%  bucket 2: 70%  bucket 1: 80%  bucket 2: 80%  bucket 1: 90%  bucket 2: 90%  bucket 1: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1408 for bucket 1  Sorting block time: 00:00:00Returning block of 850 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 3: 30%  bucket 4: 20%  bucket 3: 40%  bucket 4: 30%  bucket 3: 50%  bucket 4: 40%  bucket 3: 60%  bucket 4: 50%  bucket 3: 70%  bucket 4: 60%  bucket 3: 80%  bucket 4: 70%  bucket 3: 90%  bucket 4: 80%  bucket 3: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1478 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1053 for bucket 3  Sorting block time: 00:00:00Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5Getting block 6 of 15  Calculating Z arrays for bucket 5  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 6: 10%  bucket 5: 20%  bucket 6: 20%  bucket 5: 30%  bucket 6: 30%  bucket 5: 40%  bucket 6: 40%  bucket 5: 50%  bucket 6: 50%  bucket 6: 60%  bucket 5: 60%  bucket 6: 70%  bucket 5: 70%  bucket 6: 80%  bucket 5: 80%  bucket 6: 90%  bucket 5: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:  bucket 7: 10%Getting block 8 of 15  bucket 7: 20%  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 7: 30%  bucket 8: 10%  bucket 7: 40%  bucket 8: 20%  bucket 7: 50%  bucket 7: 60%  bucket 8: 30%  bucket 7: 70%  bucket 8: 40%  bucket 7: 80%  bucket 8: 50%  bucket 7: 90%  bucket 8: 60%  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  bucket 8: 70%  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 544 for bucket 8Returning block of 1387 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:Getting block 10 of 15  bucket 9: 10%  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 20%  bucket 10: 10%  bucket 9: 30%  bucket 10: 20%  bucket 9: 40%  bucket 10: 30%  bucket 10: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 10: 60%  bucket 9: 70%  bucket 10: 70%  bucket 10: 80%  bucket 9: 80%  bucket 10: 90%  bucket 9: 90%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 682 for bucket 10  Sorting block time: 00:00:00Returning block of 1303 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 10%  Entering block accumulator loop for bucket 12:  bucket 11: 20%  bucket 11: 30%  bucket 12: 10%  bucket 11: 40%  bucket 12: 20%  bucket 11: 50%  bucket 12: 30%  bucket 11: 60%  bucket 12: 40%  bucket 11: 70%  bucket 12: 50%  bucket 11: 80%  bucket 11: 90%  bucket 12: 60%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  Sorting block time: 00:00:00Returning block of 1078 for bucket 11  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 717 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 13: 20%  bucket 13: 30%  bucket 13: 40%  bucket 13: 50%  bucket 13: 60%  bucket 13: 70%  bucket 13: 80%  bucket 13: 90%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1489 for bucket 13Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 14: 20%  bucket 14: 30%  bucket 14: 40%  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  bucket 1: 10%  Entering block accumulator loop for bucket 2:  bucket 1: 20%  bucket 1: 30%  bucket 2: 10%  bucket 1: 40%  bucket 1: 50%  bucket 1: 60%  bucket 2: 20%  bucket 1: 70%  bucket 1: 80%  bucket 2: 30%  bucket 1: 90%  bucket 2: 40%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 50%  bucket 2: 60%  bucket 2: 70%  bucket 2: 80%  bucket 2: 90%  Sorting block time: 00:00:00  bucket 2: 100%Returning block of 390 for bucket 1  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 3: 30%  bucket 4: 30%  bucket 3: 40%  bucket 4: 40%  bucket 3: 50%  bucket 4: 50%  bucket 3: 60%  bucket 4: 60%  bucket 3: 70%  bucket 4: 70%  bucket 3: 80%  bucket 4: 80%  bucket 3: 90%  bucket 4: 90%  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1230 for bucket 3  Sorting block time: 00:00:00Returning block of 1202 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:  bucket 5: 10%  bucket 5: 20%  bucket 5: 30%  bucket 5: 40%  bucket 5: 50%  bucket 5: 60%  bucket 5: 70%  bucket 5: 80%  bucket 5: 90%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1531 for bucket 5Getting block 6 of 15  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 6: 10%  bucket 6: 20%  bucket 6: 30%  bucket 6: 40%  bucket 6: 50%  bucket 6: 60%  bucket 6: 70%  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 482 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:  bucket 7: 10%  bucket 7: 20%Getting block 8 of 15  bucket 7: 30%  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 7: 40%  bucket 8: 10%  bucket 7: 50%  bucket 8: 20%  bucket 8: 30%  bucket 7: 60%  bucket 8: 40%  bucket 7: 70%  bucket 8: 50%  bucket 7: 80%  bucket 8: 60%  bucket 7: 90%  bucket 8: 70%  bucket 8: 80%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 90%  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1180 for bucket 8  Sorting block time: 00:00:00Returning block of 1496 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 15  Entering block accumulator loop for bucket 9:  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 9: 30%  bucket 10: 30%  bucket 9: 40%  bucket 10: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 10: 60%  bucket 9: 70%  bucket 10: 70%  bucket 9: 80%  bucket 9: 90%  bucket 10: 80%  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  bucket 10: 90%  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1340 for bucket 9  Sorting block time: 00:00:00Returning block of 939 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11Getting block 12 of 15  Calculating Z arrays for bucket 11  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 11:  Entering block accumulator loop for bucket 12:  bucket 11: 10%  bucket 12: 10%  bucket 11: 20%  bucket 12: 20%  bucket 11: 30%  bucket 12: 30%  bucket 11: 40%  bucket 12: 40%  bucket 11: 50%  bucket 12: 50%  bucket 11: 60%  bucket 12: 60%  bucket 11: 70%  bucket 12: 70%  bucket 11: 80%  bucket 12: 80%  bucket 11: 90%  bucket 12: 90%  bucket 11: 100%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 991 for bucket 12  Sorting block time: 00:00:00Returning block of 1106 for bucket 11Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 13: 20%  bucket 14: 10%  bucket 13: 30%  bucket 14: 20%  bucket 13: 40%  bucket 14: 30%  bucket 13: 50%  bucket 14: 40%  bucket 13: 60%  bucket 14: 50%  bucket 13: 70%  bucket 14: 60%  bucket 13: 80%  bucket 14: 70%  bucket 13: 90%  bucket 14: 80%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #2)" name="1" time="55.7748761177063">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/4/e/4/dataset_4e44f9a3-8d2d-4290-824b-3f6baafc2ede.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 2: 20%  bucket 1: 40%  bucket 2: 30%  bucket 2: 40%  bucket 2: 50%  bucket 1: 50%  bucket 2: 60%  bucket 1: 60%  bucket 1: 70%  bucket 2: 70%  bucket 1: 80%  bucket 2: 80%  bucket 1: 90%  bucket 2: 90%  bucket 1: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 850 for bucket 2  Sorting block time: 00:00:00Returning block of 1408 for bucket 1Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 4: 10%  bucket 3: 10%  bucket 4: 20%  bucket 3: 20%  bucket 4: 30%  bucket 3: 30%  bucket 4: 40%  bucket 4: 50%  bucket 3: 40%  bucket 4: 60%  bucket 4: 70%  bucket 4: 80%  bucket 3: 50%  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1478 for bucket 4  (Using difference cover)  bucket 3: 60%  bucket 3: 70%  bucket 3: 80%  bucket 3: 90%  bucket 3: 100%  Sorting block of length 1052 for bucket 3  Sorting block time: 00:00:00  (Using difference cover)Returning block of 1479 for bucket 4  Sorting block time: 00:00:00Returning block of 1053 for bucket 3Getting block 5 of 15  Reserving size (1554) for bucket 5Getting block 6 of 15  Calculating Z arrays for bucket 5  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 6: 10%  bucket 5: 20%  bucket 5: 30%  bucket 6: 20%  bucket 5: 40%  bucket 6: 30%  bucket 5: 50%  bucket 5: 60%  bucket 6: 40%  bucket 5: 70%  bucket 6: 50%  bucket 5: 80%  bucket 6: 60%  bucket 5: 90%  bucket 6: 70%  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  bucket 7: 10%  Entering block accumulator loop for bucket 8:  bucket 7: 20%  bucket 8: 10%  bucket 7: 30%  bucket 8: 20%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 7: 60%  bucket 8: 50%  bucket 7: 70%  bucket 7: 80%  bucket 8: 60%  bucket 7: 90%  bucket 8: 70%  bucket 8: 80%  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  bucket 8: 90%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 544 for bucket 8  Sorting block time: 00:00:00Returning block of 1387 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 15  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 10: 30%  bucket 9: 30%  bucket 10: 40%  bucket 9: 40%  bucket 10: 50%  bucket 9: 50%  bucket 10: 60%  bucket 9: 60%  bucket 10: 70%  bucket 10: 80%  bucket 10: 90%  bucket 9: 70%  bucket 10: 100%  Sorting block of length 681 for bucket 10  bucket 9: 80%  bucket 9: 90%  (Using difference cover)  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 682 for bucket 10  Sorting block time: 00:00:00Returning block of 1303 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%Getting block 12 of 15  bucket 11: 30%  Reserving size (1554) for bucket 12  bucket 11: 40%  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 11: 50%  bucket 11: 60%  bucket 12: 10%  bucket 11: 70%  bucket 12: 20%  bucket 11: 80%  bucket 12: 30%  bucket 11: 90%  bucket 12: 40%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 50%  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  Sorting block time: 00:00:00Returning block of 1078 for bucket 11  bucket 12: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 717 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13Getting block 14 of 15  Calculating Z arrays for bucket 13  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 13: 10%  bucket 14: 20%  bucket 13: 20%  bucket 14: 30%  bucket 14: 40%  bucket 13: 30%  bucket 14: 50%  bucket 14: 60%  bucket 13: 40%  bucket 14: 70%  bucket 13: 50%  bucket 14: 80%  bucket 13: 60%  bucket 14: 90%  bucket 13: 70%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  bucket 13: 80%  bucket 13: 90%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1256 for bucket 14  Sorting block time: 00:00:00Returning block of 1489 for bucket 13Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 2: 20%  bucket 1: 30%  bucket 2: 30%  bucket 1: 40%  bucket 1: 50%  bucket 2: 40%  bucket 1: 60%  bucket 2: 50%  bucket 1: 70%  bucket 1: 80%  bucket 2: 60%  bucket 1: 90%  bucket 2: 70%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 390 for bucket 1  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 3: 30%  bucket 4: 30%  bucket 4: 40%  bucket 3: 40%  bucket 4: 50%  bucket 3: 50%  bucket 4: 60%  bucket 3: 60%  bucket 4: 70%  bucket 4: 80%  bucket 3: 70%  bucket 4: 90%  bucket 3: 80%  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  bucket 3: 90%  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1202 for bucket 4  Sorting block time: 00:00:00Returning block of 1230 for bucket 3Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:  bucket 5: 10%  bucket 5: 20%  bucket 5: 30%  bucket 5: 40%  bucket 5: 50%  bucket 5: 60%  bucket 5: 70%  bucket 5: 80%  bucket 5: 90%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1531 for bucket 5Getting block 6 of 15  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 6: 10%  bucket 6: 20%  bucket 6: 30%  bucket 6: 40%  bucket 6: 50%  bucket 6: 60%  bucket 6: 70%  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 482 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:  bucket 7: 10%  bucket 7: 20%  bucket 7: 30%  bucket 7: 40%  bucket 7: 50%  bucket 7: 60%  bucket 7: 70%  bucket 7: 80%  bucket 7: 90%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1496 for bucket 7Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 8: 10%  bucket 8: 20%  bucket 8: 30%  bucket 8: 40%  bucket 8: 50%  bucket 8: 60%  bucket 8: 70%  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1180 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%  bucket 9: 20%  bucket 9: 30%  bucket 9: 40%  bucket 9: 50%  bucket 9: 60%  bucket 9: 70%  bucket 9: 80%  bucket 9: 90%  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1340 for bucket 9Getting block 10 of 15  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 10: 10%  bucket 10: 20%  bucket 10: 30%  bucket 10: 40%  bucket 10: 50%  bucket 10: 60%  bucket 10: 70%  bucket 10: 80%  bucket 10: 90%  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 939 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%  bucket 11: 30%  bucket 11: 40%  bucket 11: 50%  bucket 11: 60%  bucket 11: 70%  bucket 11: 80%  bucket 11: 90%  bucket 11: 100%  Sorting block of length 1105 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1106 for bucket 11Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 12: 10%  bucket 12: 20%  bucket 12: 30%  bucket 12: 40%  bucket 12: 50%  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 13: 20%  bucket 13: 30%  bucket 13: 40%  bucket 13: 50%  bucket 13: 60%  bucket 13: 70%  bucket 13: 80%  bucket 13: 90%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 14: 20%  bucket 14: 30%  bucket 14: 40%  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #3)" name="2" time="45.504765033721924">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/4/e/4/dataset_4e44f9a3-8d2d-4290-824b-3f6baafc2ede.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1  Calculating Z arrays for bucket 1Getting block 2 of 15  Entering block accumulator loop for bucket 1:  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  bucket 1: 10%  Entering block accumulator loop for bucket 2:  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 1: 40%  bucket 2: 20%  bucket 1: 50%  bucket 2: 30%  bucket 1: 60%  bucket 1: 70%  bucket 2: 40%  bucket 1: 80%  bucket 2: 50%  bucket 1: 90%  bucket 1: 100%  bucket 2: 60%  Sorting block of length 1407 for bucket 1  (Using difference cover)  bucket 2: 70%  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1408 for bucket 1  Sorting block time: 00:00:00Returning block of 850 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 3Getting block 4 of 15  Reserving size (1554) for bucket 4  Entering block accumulator loop for bucket 3:  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 3: 30%  bucket 4: 30%  bucket 3: 40%  bucket 4: 40%  bucket 3: 50%  bucket 4: 50%  bucket 3: 60%  bucket 4: 60%  bucket 3: 70%  bucket 4: 70%  bucket 3: 80%  bucket 4: 80%  bucket 3: 90%  bucket 4: 90%  bucket 3: 100%  bucket 4: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  Sorting block of length 1478 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1053 for bucket 3  Sorting block time: 00:00:00Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5Getting block 6 of 15  Calculating Z arrays for bucket 5  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 6: 10%  bucket 5: 20%  bucket 6: 20%  bucket 5: 30%  bucket 5: 40%  bucket 6: 30%  bucket 5: 50%  bucket 6: 40%  bucket 5: 60%  bucket 6: 50%  bucket 5: 70%  bucket 5: 80%  bucket 6: 60%  bucket 5: 90%  bucket 6: 70%  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7Getting block 8 of 15  Calculating Z arrays for bucket 7  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  Entering block accumulator loop for bucket 7:  bucket 8: 10%  bucket 7: 10%  bucket 8: 20%  bucket 7: 20%  bucket 8: 30%  bucket 8: 40%  bucket 7: 30%  bucket 8: 50%  bucket 8: 60%  bucket 7: 40%  bucket 8: 70%  bucket 7: 50%  bucket 8: 80%  bucket 8: 90%  bucket 7: 60%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  bucket 7: 70%  bucket 7: 80%  Sorting block time: 00:00:00Returning block of 544 for bucket 8  bucket 7: 90%  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1387 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%  bucket 9: 20%  bucket 9: 30%Getting block 10 of 15  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 40%  bucket 9: 50%  bucket 10: 10%  bucket 9: 60%  bucket 10: 20%  bucket 9: 70%  bucket 10: 30%  bucket 9: 80%  bucket 10: 40%  bucket 9: 90%  bucket 10: 50%  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  bucket 10: 60%  bucket 10: 70%  bucket 10: 80%  bucket 10: 90%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1303 for bucket 9  Sorting block time: 00:00:00Returning block of 682 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%  bucket 11: 30%  bucket 11: 40%  bucket 11: 50%  bucket 11: 60%Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 70%  Entering block accumulator loop for bucket 12:  bucket 11: 80%  bucket 12: 10%  bucket 11: 90%  bucket 12: 20%  bucket 11: 100%  bucket 12: 30%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 40%  bucket 12: 50%  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  Sorting block time: 00:00:00Returning block of 1078 for bucket 11  bucket 12: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 717 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  bucket 13: 20%  Entering block accumulator loop for bucket 14:  bucket 13: 30%  bucket 14: 10%  bucket 13: 40%  bucket 14: 20%  bucket 13: 50%  bucket 14: 30%  bucket 13: 60%  bucket 14: 40%  bucket 13: 70%  bucket 14: 50%  bucket 13: 80%  bucket 14: 60%  bucket 13: 90%  bucket 14: 70%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1489 for bucket 13  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 2: 20%  bucket 1: 30%  bucket 1: 40%  bucket 2: 30%  bucket 1: 50%  bucket 2: 40%  bucket 1: 60%  bucket 1: 70%  bucket 2: 50%  bucket 1: 80%  bucket 1: 90%  bucket 2: 60%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 70%  bucket 2: 80%  bucket 2: 90%  Sorting block time: 00:00:00  bucket 2: 100%Returning block of 390 for bucket 1  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 3Getting block 4 of 15  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 3: 20%  bucket 4: 10%  bucket 3: 30%  bucket 3: 40%  bucket 4: 20%  bucket 3: 50%  bucket 3: 60%  bucket 4: 30%  bucket 3: 70%  bucket 4: 40%  bucket 3: 80%  bucket 3: 90%  bucket 4: 50%  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  bucket 4: 60%  bucket 4: 70%  bucket 4: 80%  bucket 4: 90%  Sorting block time: 00:00:00Returning block of 1230 for bucket 3  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1202 for bucket 4Getting block 5 of 15Getting block 6 of 15  Reserving size (1554) for bucket 5  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  Entering block accumulator loop for bucket 5:  bucket 6: 10%  bucket 5: 10%  bucket 6: 20%  bucket 5: 20%  bucket 6: 30%  bucket 5: 30%  bucket 6: 40%  bucket 5: 40%  bucket 6: 50%  bucket 5: 50%  bucket 6: 60%  bucket 5: 60%  bucket 6: 70%  bucket 5: 70%  bucket 6: 80%  bucket 5: 80%  bucket 6: 90%  bucket 5: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 482 for bucket 6  Sorting block time: 00:00:00Returning block of 1531 for bucket 5Getting block 7 of 15  Reserving size (1554) for bucket 7Getting block 8 of 15  Calculating Z arrays for bucket 7  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 7: 10%  bucket 8: 10%  bucket 7: 20%  bucket 8: 20%  bucket 7: 30%  bucket 8: 30%  bucket 7: 40%  bucket 8: 40%  bucket 7: 50%  bucket 8: 50%  bucket 7: 60%  bucket 8: 60%  bucket 7: 70%  bucket 8: 70%  bucket 7: 80%  bucket 8: 80%  bucket 7: 90%  bucket 8: 90%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1180 for bucket 8  Sorting block time: 00:00:00Returning block of 1496 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9Getting block 10 of 15  Calculating Z arrays for bucket 9  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 10: 20%  bucket 9: 20%  bucket 10: 30%  bucket 9: 30%  bucket 10: 40%  bucket 9: 40%  bucket 10: 50%  bucket 9: 50%  bucket 10: 60%  bucket 9: 60%  bucket 10: 70%  bucket 9: 70%  bucket 10: 80%  bucket 9: 80%  bucket 10: 90%  bucket 9: 90%  bucket 10: 100%  bucket 9: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block of length 1339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 939 for bucket 10  Sorting block time: 00:00:00Returning block of 1340 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11Getting block 12 of 15  Calculating Z arrays for bucket 11  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 11:  Entering block accumulator loop for bucket 12:  bucket 11: 10%  bucket 12: 10%  bucket 11: 20%  bucket 12: 20%  bucket 11: 30%  bucket 12: 30%  bucket 11: 40%  bucket 12: 40%  bucket 11: 50%  bucket 12: 50%  bucket 11: 60%  bucket 12: 60%  bucket 11: 70%  bucket 12: 70%  bucket 11: 80%  bucket 11: 90%  bucket 12: 80%  bucket 11: 100%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 90%  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1106 for bucket 11  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 13: 20%  bucket 13: 30%  bucket 13: 40%  bucket 13: 50%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  bucket 13: 60%  Entering block accumulator loop for bucket 14:  bucket 13: 70%  bucket 14: 10%  bucket 13: 80%  bucket 14: 20%  bucket 13: 90%  bucket 14: 30%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  bucket 14: 40%  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  Sorting block time: 00:00:00Returning block of 1170 for bucket 13  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #4)" name="3" time="46.65973210334778">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/4/e/4/dataset_4e44f9a3-8d2d-4290-824b-3f6baafc2ede.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Entering block accumulator loop for bucket 1:  Calculating Z arrays for bucket 2  bucket 1: 10%  Entering block accumulator loop for bucket 2:  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 1: 40%  bucket 2: 20%  bucket 2: 30%  bucket 2: 40%  bucket 2: 50%  bucket 1: 50%  bucket 2: 60%  bucket 2: 70%  bucket 1: 60%  bucket 2: 80%  bucket 1: 70%  bucket 2: 90%  bucket 1: 80%  bucket 2: 100%  bucket 1: 90%  Sorting block of length 849 for bucket 2  (Using difference cover)  bucket 1: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  Sorting block time: 00:00:00Returning block of 850 for bucket 2  Sorting block time: 00:00:00Returning block of 1408 for bucket 1Getting block 3 of 15  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 3Getting block 4 of 15  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 3: 20%  bucket 4: 10%  bucket 3: 30%  bucket 4: 20%  bucket 3: 40%  bucket 4: 30%  bucket 3: 50%  bucket 4: 40%  bucket 3: 60%  bucket 4: 50%  bucket 3: 70%  bucket 4: 60%  bucket 3: 80%  bucket 4: 70%  bucket 3: 90%  bucket 4: 80%  bucket 3: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1478 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1053 for bucket 3  Sorting block time: 00:00:00Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5Getting block 6 of 15  Calculating Z arrays for bucket 5  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 6: 10%  bucket 6: 20%  bucket 5: 20%  bucket 6: 30%  bucket 5: 30%  bucket 6: 40%  bucket 5: 40%  bucket 6: 50%  bucket 5: 50%  bucket 6: 60%  bucket 5: 60%  bucket 6: 70%  bucket 5: 70%  bucket 6: 80%  bucket 5: 80%  bucket 6: 90%  bucket 5: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7Getting block 8 of 15  Reserving size (1554) for bucket 8  Entering block accumulator loop for bucket 7:  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 7: 10%  bucket 7: 20%  bucket 8: 10%  bucket 7: 30%  bucket 7: 40%  bucket 8: 20%  bucket 7: 50%  bucket 8: 30%  bucket 7: 60%  bucket 8: 40%  bucket 7: 70%  bucket 8: 50%  bucket 7: 80%  bucket 7: 90%  bucket 8: 60%  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  bucket 8: 70%  bucket 8: 80%  bucket 8: 90%  Sorting block time: 00:00:00Returning block of 1387 for bucket 7  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 544 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 15  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 10: 10%  bucket 9: 10%  bucket 10: 20%  bucket 9: 20%  bucket 10: 30%  bucket 9: 30%  bucket 10: 40%  bucket 9: 40%  bucket 10: 50%  bucket 10: 60%  bucket 9: 50%  bucket 10: 70%  bucket 9: 60%  bucket 10: 80%  bucket 9: 70%  bucket 10: 90%  bucket 9: 80%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  bucket 9: 90%  bucket 9: 100%  Sorting block of length 1302 for bucket 9  Sorting block time: 00:00:00  (Using difference cover)Returning block of 682 for bucket 10  Sorting block time: 00:00:00Returning block of 1303 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11Getting block 12 of 15  Calculating Z arrays for bucket 11  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 11:  Entering block accumulator loop for bucket 12:  bucket 11: 10%  bucket 12: 10%  bucket 11: 20%  bucket 12: 20%  bucket 12: 30%  bucket 11: 30%  bucket 12: 40%  bucket 11: 40%  bucket 11: 50%  bucket 11: 60%  bucket 12: 50%  bucket 11: 70%  bucket 12: 60%  bucket 11: 80%  bucket 12: 70%  bucket 11: 90%  bucket 12: 80%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1078 for bucket 11  Sorting block time: 00:00:00Returning block of 717 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13Getting block 14 of 15  Entering block accumulator loop for bucket 13:  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 13: 10%  bucket 13: 20%  bucket 14: 10%  bucket 13: 30%  bucket 14: 20%  bucket 13: 40%  bucket 14: 30%  bucket 13: 50%  bucket 13: 60%  bucket 14: 40%  bucket 13: 70%  bucket 14: 50%  bucket 13: 80%  bucket 14: 60%  bucket 13: 90%  bucket 14: 70%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1489 for bucket 13  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 1: 40%  bucket 2: 20%  bucket 1: 50%  bucket 2: 30%  bucket 1: 60%  bucket 2: 40%  bucket 1: 70%  bucket 2: 50%  bucket 1: 80%  bucket 2: 60%  bucket 1: 90%  bucket 2: 70%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 390 for bucket 1  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 4 of 15Getting block 3 of 15  Reserving size (1554) for bucket 4  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 3  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 3:  bucket 4: 10%  bucket 3: 10%  bucket 4: 20%  bucket 3: 20%  bucket 4: 30%  bucket 4: 40%  bucket 3: 30%  bucket 4: 50%  bucket 3: 40%  bucket 4: 60%  bucket 3: 50%  bucket 4: 70%  bucket 3: 60%  bucket 4: 80%  bucket 3: 70%  bucket 4: 90%  bucket 3: 80%  bucket 4: 100%  bucket 3: 90%  Sorting block of length 1201 for bucket 4  (Using difference cover)  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1202 for bucket 4  Sorting block time: 00:00:00Returning block of 1230 for bucket 3Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:Getting block 6 of 15  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  bucket 5: 10%  Entering block accumulator loop for bucket 6:  bucket 5: 20%  bucket 6: 10%  bucket 5: 30%  bucket 5: 40%  bucket 6: 20%  bucket 5: 50%  bucket 6: 30%  bucket 5: 60%  bucket 6: 40%  bucket 6: 50%  bucket 5: 70%  bucket 5: 80%  bucket 6: 60%  bucket 5: 90%  bucket 6: 70%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 482 for bucket 6  Sorting block time: 00:00:00Returning block of 1531 for bucket 5Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 7: 10%  bucket 8: 10%  bucket 7: 20%  bucket 8: 20%  bucket 7: 30%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 7: 60%  bucket 8: 50%  bucket 7: 70%  bucket 8: 60%  bucket 7: 80%  bucket 8: 70%  bucket 7: 90%  bucket 8: 80%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 90%  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1496 for bucket 7  Sorting block time: 00:00:00Returning block of 1180 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 15  Reserving size (1554) for bucket 10  Entering block accumulator loop for bucket 9:  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 9: 30%  bucket 10: 30%  bucket 9: 40%  bucket 10: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 10: 60%  bucket 9: 70%  bucket 10: 70%  bucket 9: 80%  bucket 10: 80%  bucket 9: 90%  bucket 10: 90%  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 939 for bucket 10  Sorting block time: 00:00:00Returning block of 1340 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11Getting block 12 of 15  Entering block accumulator loop for bucket 11:  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 11: 10%  bucket 11: 20%  bucket 12: 10%  bucket 11: 30%  bucket 11: 40%  bucket 12: 20%  bucket 11: 50%  bucket 12: 30%  bucket 11: 60%  bucket 11: 70%  bucket 12: 40%  bucket 11: 80%  bucket 12: 50%  bucket 11: 90%  bucket 11: 100%  bucket 12: 60%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  Sorting block time: 00:00:00Returning block of 1106 for bucket 11  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  bucket 13: 20%  Entering block accumulator loop for bucket 14:  bucket 13: 30%  bucket 14: 10%  bucket 13: 40%  bucket 14: 20%  bucket 13: 50%  bucket 14: 30%  bucket 13: 60%  bucket 14: 40%  bucket 13: 70%  bucket 14: 50%  bucket 14: 60%  bucket 13: 80%  bucket 14: 70%  bucket 13: 90%  bucket 14: 80%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:01
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #5)" name="4" time="55.98216676712036">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/a/a/8/dataset_aa80b840-88b2-43bd-85bc-8725c944d87d.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 2: 20%  bucket 1: 30%  bucket 1: 40%  bucket 2: 30%  bucket 1: 50%  bucket 1: 60%  bucket 2: 40%  bucket 1: 70%  bucket 1: 80%  bucket 2: 50%  bucket 1: 90%  bucket 2: 60%  bucket 1: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  bucket 2: 70%  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1408 for bucket 1  Sorting block time: 00:00:00Returning block of 850 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 3Getting block 4 of 15  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 4: 30%  bucket 3: 30%  bucket 4: 40%  bucket 3: 40%  bucket 4: 50%  bucket 3: 50%  bucket 4: 60%  bucket 3: 60%  bucket 4: 70%  bucket 3: 70%  bucket 4: 80%  bucket 3: 80%  bucket 4: 90%  bucket 3: 90%  bucket 4: 100%  Sorting block of length 1478 for bucket 4  (Using difference cover)  bucket 3: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 1053 for bucket 3Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5Getting block 6 of 15  Entering block accumulator loop for bucket 5:  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 5: 20%  bucket 5: 30%  bucket 6: 10%  bucket 5: 40%  bucket 6: 20%  bucket 5: 50%  bucket 5: 60%  bucket 6: 30%  bucket 5: 70%  bucket 6: 40%  bucket 5: 80%  bucket 5: 90%  bucket 6: 50%  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  bucket 6: 60%  bucket 6: 70%  bucket 6: 80%  Sorting block time: 00:00:00Returning block of 547 for bucket 5  bucket 6: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7Getting block 8 of 15  Calculating Z arrays for bucket 7  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 7: 10%  bucket 8: 10%  bucket 7: 20%  bucket 7: 30%  bucket 8: 20%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 7: 60%  bucket 8: 50%  bucket 7: 70%  bucket 7: 80%  bucket 8: 60%  bucket 7: 90%  bucket 8: 70%  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1387 for bucket 7  Sorting block time: 00:00:00Returning block of 544 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%Getting block 10 of 15  bucket 9: 20%  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 30%  bucket 10: 10%  bucket 9: 40%  bucket 10: 20%  bucket 9: 50%  bucket 10: 30%  bucket 9: 60%  bucket 10: 40%  bucket 9: 70%  bucket 10: 50%  bucket 9: 80%  bucket 10: 60%  bucket 9: 90%  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  bucket 10: 70%  bucket 10: 80%  bucket 10: 90%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1303 for bucket 9  Sorting block time: 00:00:00Returning block of 682 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%  bucket 11: 30%Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 40%  Entering block accumulator loop for bucket 12:  bucket 11: 50%  bucket 12: 10%  bucket 11: 60%  bucket 12: 20%  bucket 11: 70%  bucket 12: 30%  bucket 11: 80%  bucket 12: 40%  bucket 11: 90%  bucket 12: 50%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1078 for bucket 11  Sorting block time: 00:00:00Returning block of 717 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 13: 20%  bucket 13: 30%Getting block 14 of 15  Reserving size (1554) for bucket 14  bucket 13: 40%  Calculating Z arrays for bucket 14  bucket 13: 50%  Entering block accumulator loop for bucket 14:  bucket 13: 60%  bucket 14: 10%  bucket 13: 70%  bucket 13: 80%  bucket 14: 20%  bucket 13: 90%  bucket 14: 30%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  bucket 14: 40%  bucket 14: 50%  bucket 14: 60%  Sorting block time: 00:00:00Returning block of 1489 for bucket 13  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 1: 30%  bucket 2: 20%  bucket 1: 40%  bucket 2: 30%  bucket 1: 50%  bucket 1: 60%  bucket 2: 40%  bucket 1: 70%  bucket 2: 50%  bucket 2: 60%  bucket 1: 80%  bucket 2: 70%  bucket 1: 90%  bucket 2: 80%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 90%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 390 for bucket 1  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 3Getting block 4 of 15  Reserving size (1554) for bucket 4  Entering block accumulator loop for bucket 3:  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 3: 30%  bucket 4: 30%  bucket 3: 40%  bucket 4: 40%  bucket 3: 50%  bucket 3: 60%  bucket 4: 50%  bucket 3: 70%  bucket 4: 60%  bucket 3: 80%  bucket 4: 70%  bucket 3: 90%  bucket 4: 80%  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1230 for bucket 3  Sorting block time: 00:00:00Returning block of 1202 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:  bucket 5: 10%Getting block 6 of 15  Reserving size (1554) for bucket 6  bucket 5: 20%  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 5: 30%  bucket 6: 10%  bucket 5: 40%  bucket 6: 20%  bucket 6: 30%  bucket 5: 50%  bucket 5: 60%  bucket 6: 40%  bucket 5: 70%  bucket 6: 50%  bucket 5: 80%  bucket 6: 60%  bucket 6: 70%  bucket 5: 90%  bucket 6: 80%  bucket 6: 90%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 482 for bucket 6  Sorting block time: 00:00:00Returning block of 1531 for bucket 5Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 7: 10%  bucket 8: 10%  bucket 7: 20%  bucket 7: 30%  bucket 8: 20%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 7: 60%  bucket 8: 50%  bucket 7: 70%  bucket 8: 60%  bucket 7: 80%  bucket 8: 70%  bucket 7: 90%  bucket 8: 80%  bucket 7: 100%  bucket 8: 90%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1180 for bucket 8  Sorting block time: 00:00:00Returning block of 1496 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 15  Entering block accumulator loop for bucket 9:  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 9: 30%  bucket 10: 30%  bucket 9: 40%  bucket 10: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 10: 60%  bucket 9: 70%  bucket 10: 70%  bucket 9: 80%  bucket 10: 80%  bucket 9: 90%  bucket 10: 90%  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 939 for bucket 10  Sorting block time: 00:00:00Returning block of 1340 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11Getting block 12 of 15  Calculating Z arrays for bucket 11  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 11:  Entering block accumulator loop for bucket 12:  bucket 11: 10%  bucket 12: 10%  bucket 11: 20%  bucket 12: 20%  bucket 11: 30%  bucket 12: 30%  bucket 11: 40%  bucket 12: 40%  bucket 11: 50%  bucket 12: 50%  bucket 11: 60%  bucket 12: 60%  bucket 11: 70%  bucket 12: 70%  bucket 11: 80%  bucket 12: 80%  bucket 12: 90%  bucket 11: 90%  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  bucket 11: 100%  Sorting block of length 1105 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 991 for bucket 12  Sorting block time: 00:00:00Returning block of 1106 for bucket 11Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 13: 20%  bucket 13: 30%  bucket 13: 40%  bucket 13: 50%  bucket 13: 60%  bucket 13: 70%  bucket 13: 80%  bucket 13: 90%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 14: 20%  bucket 14: 30%  bucket 14: 40%  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:01
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index3 reads; of these:  3 (100.00%) were paired; of these:    2 (66.67%) aligned concordantly 0 times    1 (33.33%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    2 pairs aligned concordantly 0 times; of these:      0 (0.00%) aligned discordantly 1 time    ----    2 pairs aligned 0 times concordantly or discordantly; of these:      4 mates make up the pairs; of these:        3 (75.00%) aligned 0 times        1 (25.00%) aligned exactly 1 time        0 (0.00%) aligned >1 times50.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #6)" name="5" time="55.595521450042725">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/a/a/8/dataset_aa80b840-88b2-43bd-85bc-8725c944d87d.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  bucket 1: 10%  Entering block accumulator loop for bucket 2:  bucket 1: 20%  bucket 1: 30%  bucket 2: 10%  bucket 1: 40%  bucket 2: 20%  bucket 1: 50%  bucket 2: 30%  bucket 1: 60%  bucket 2: 40%  bucket 1: 70%  bucket 2: 50%  bucket 1: 80%  bucket 2: 60%  bucket 1: 90%  bucket 2: 70%  bucket 1: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1408 for bucket 1  Sorting block time: 00:00:00Returning block of 850 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 3Getting block 4 of 15  Entering block accumulator loop for bucket 3:  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 3: 30%  bucket 4: 30%  bucket 3: 40%  bucket 4: 40%  bucket 3: 50%  bucket 3: 60%  bucket 4: 50%  bucket 3: 70%  bucket 4: 60%  bucket 3: 80%  bucket 3: 90%  bucket 4: 70%  bucket 3: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  bucket 4: 80%  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1478 for bucket 4  Sorting block time: 00:00:00  (Using difference cover)Returning block of 1053 for bucket 3  Sorting block time: 00:00:00Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:  bucket 5: 10%Getting block 6 of 15  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  bucket 5: 20%  Entering block accumulator loop for bucket 6:  bucket 5: 30%  bucket 6: 10%  bucket 5: 40%  bucket 6: 20%  bucket 5: 50%  bucket 6: 30%  bucket 5: 60%  bucket 6: 40%  bucket 5: 70%  bucket 5: 80%  bucket 6: 50%  bucket 5: 90%  bucket 6: 60%  bucket 5: 100%  bucket 6: 70%  Sorting block of length 546 for bucket 5  (Using difference cover)  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:  bucket 7: 10%  bucket 7: 20%  bucket 7: 30%Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  bucket 7: 40%  Entering block accumulator loop for bucket 8:  bucket 7: 50%  bucket 7: 60%  bucket 8: 10%  bucket 7: 70%  bucket 8: 20%  bucket 7: 80%  bucket 8: 30%  bucket 7: 90%  bucket 8: 40%  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  bucket 8: 50%  bucket 8: 60%  bucket 8: 70%  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1387 for bucket 7  Sorting block time: 00:00:00Returning block of 544 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%Getting block 10 of 15  Reserving size (1554) for bucket 10  bucket 9: 20%  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 30%  bucket 10: 10%  bucket 9: 40%  bucket 10: 20%  bucket 9: 50%  bucket 10: 30%  bucket 9: 60%  bucket 10: 40%  bucket 9: 70%  bucket 10: 50%  bucket 9: 80%  bucket 10: 60%  bucket 9: 90%  bucket 10: 70%  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  bucket 10: 80%  bucket 10: 90%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1303 for bucket 9  Sorting block time: 00:00:00Returning block of 682 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%  bucket 11: 30%Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 40%  Entering block accumulator loop for bucket 12:  bucket 11: 50%  bucket 12: 10%  bucket 11: 60%  bucket 12: 20%  bucket 11: 70%  bucket 12: 30%  bucket 11: 80%  bucket 12: 40%  bucket 11: 90%  bucket 12: 50%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1078 for bucket 11  Sorting block time: 00:00:00Returning block of 717 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  bucket 13: 20%  Entering block accumulator loop for bucket 14:  bucket 13: 30%  bucket 14: 10%  bucket 13: 40%  bucket 13: 50%  bucket 14: 20%  bucket 13: 60%  bucket 14: 30%  bucket 13: 70%  bucket 13: 80%  bucket 14: 40%  bucket 13: 90%  bucket 14: 50%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1489 for bucket 13  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15Getting block 2 of 15  Reserving size (1554) for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 1  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 2: 20%  bucket 1: 40%  bucket 2: 30%  bucket 1: 50%  bucket 2: 40%  bucket 1: 60%  bucket 2: 50%  bucket 1: 70%  bucket 2: 60%  bucket 1: 80%  bucket 2: 70%  bucket 1: 90%  bucket 1: 100%  bucket 2: 80%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 90%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 390 for bucket 1  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 3: 30%  bucket 4: 30%  bucket 3: 40%  bucket 4: 40%  bucket 3: 50%  bucket 4: 50%  bucket 3: 60%  bucket 4: 60%  bucket 3: 70%  bucket 4: 70%  bucket 3: 80%  bucket 4: 80%  bucket 3: 90%  bucket 3: 100%  bucket 4: 90%  Sorting block of length 1229 for bucket 3  (Using difference cover)  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1230 for bucket 3  Sorting block time: 00:00:00Returning block of 1202 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5Getting block 6 of 15  Reserving size (1554) for bucket 6  Entering block accumulator loop for bucket 5:  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 5: 20%  bucket 6: 10%  bucket 5: 30%  bucket 6: 20%  bucket 5: 40%  bucket 6: 30%  bucket 6: 40%  bucket 5: 50%  bucket 5: 60%  bucket 6: 50%  bucket 5: 70%  bucket 6: 60%  bucket 5: 80%  bucket 6: 70%  bucket 5: 90%  bucket 6: 80%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  bucket 6: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 482 for bucket 6  Sorting block time: 00:00:00Returning block of 1531 for bucket 5Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  bucket 7: 10%  Entering block accumulator loop for bucket 8:  bucket 7: 20%  bucket 8: 10%  bucket 7: 30%  bucket 8: 20%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 7: 60%  bucket 8: 50%  bucket 7: 70%  bucket 7: 80%  bucket 8: 60%  bucket 7: 90%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 70%  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1496 for bucket 7  Sorting block time: 00:00:00Returning block of 1180 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9Getting block 10 of 15  Calculating Z arrays for bucket 9  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 10: 30%  bucket 9: 30%  bucket 10: 40%  bucket 9: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 10: 60%  bucket 9: 70%  bucket 10: 70%  bucket 9: 80%  bucket 10: 80%  bucket 9: 90%  bucket 10: 90%  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 939 for bucket 10  Sorting block time: 00:00:00Returning block of 1340 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 30%  Entering block accumulator loop for bucket 12:  bucket 11: 40%  bucket 12: 10%  bucket 11: 50%  bucket 12: 20%  bucket 11: 60%  bucket 11: 70%  bucket 12: 30%  bucket 11: 80%  bucket 12: 40%  bucket 11: 90%  bucket 12: 50%  bucket 11: 100%  bucket 12: 60%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1106 for bucket 11  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  bucket 13: 20%  Entering block accumulator loop for bucket 14:  bucket 13: 30%  bucket 14: 10%  bucket 14: 20%  bucket 13: 40%  bucket 14: 30%  bucket 13: 50%  bucket 14: 40%  bucket 13: 60%  bucket 14: 50%  bucket 13: 70%  bucket 14: 60%  bucket 13: 80%  bucket 14: 70%  bucket 13: 90%  bucket 14: 80%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:01
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #7)" name="6" time="54.89276432991028">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/a/a/8/dataset_aa80b840-88b2-43bd-85bc-8725c944d87d.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 1: 30%  bucket 2: 20%  bucket 1: 40%  bucket 2: 30%  bucket 1: 50%  bucket 2: 40%  bucket 1: 60%  bucket 1: 70%  bucket 2: 50%  bucket 1: 80%  bucket 2: 60%  bucket 1: 90%  bucket 1: 100%  bucket 2: 70%  Sorting block of length 1407 for bucket 1  (Using difference cover)  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 850 for bucket 2  Sorting block time: 00:00:00Returning block of 1408 for bucket 1Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 4: 20%  bucket 3: 30%  bucket 4: 30%  bucket 3: 40%  bucket 4: 40%  bucket 3: 50%  bucket 4: 50%  bucket 3: 60%  bucket 4: 60%  bucket 3: 70%  bucket 4: 70%  bucket 3: 80%  bucket 4: 80%  bucket 3: 90%  bucket 4: 90%  bucket 3: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  bucket 4: 100%  Sorting block of length 1478 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1479 for bucket 4  Sorting block time: 00:00:00Returning block of 1053 for bucket 3Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5Getting block 6 of 15  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 6: 10%  bucket 5: 20%  bucket 6: 20%  bucket 5: 30%  bucket 6: 30%  bucket 5: 40%  bucket 6: 40%  bucket 5: 50%  bucket 6: 50%  bucket 6: 60%  bucket 6: 70%  bucket 5: 60%  bucket 5: 70%  bucket 6: 80%  bucket 5: 80%  bucket 6: 90%  bucket 5: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:  bucket 7: 10%  bucket 7: 20%  bucket 7: 30%Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  bucket 7: 40%  Entering block accumulator loop for bucket 8:  bucket 7: 50%  bucket 8: 10%  bucket 7: 60%  bucket 8: 20%  bucket 7: 70%  bucket 8: 30%  bucket 7: 80%  bucket 8: 40%  bucket 7: 90%  bucket 8: 50%  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  bucket 8: 60%  bucket 8: 70%  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1387 for bucket 7  Sorting block time: 00:00:00Returning block of 544 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%  bucket 9: 20%Getting block 10 of 15  bucket 9: 30%  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  bucket 9: 40%  Entering block accumulator loop for bucket 10:  bucket 9: 50%  bucket 10: 10%  bucket 9: 60%  bucket 9: 70%  bucket 10: 20%  bucket 9: 80%  bucket 10: 30%  bucket 9: 90%  bucket 10: 40%  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  bucket 10: 50%  bucket 10: 60%  bucket 10: 70%  bucket 10: 80%  Sorting block time: 00:00:00Returning block of 1303 for bucket 9  bucket 10: 90%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 682 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%  bucket 11: 30%Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 40%  Entering block accumulator loop for bucket 12:  bucket 11: 50%  bucket 12: 10%  bucket 11: 60%  bucket 12: 20%  bucket 11: 70%  bucket 12: 30%  bucket 11: 80%  bucket 12: 40%  bucket 11: 90%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 50%  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  Sorting block time: 00:00:00Returning block of 1078 for bucket 11  bucket 12: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 717 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13Getting block 14 of 15  Calculating Z arrays for bucket 13  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 13: 10%  bucket 14: 20%  bucket 13: 20%  bucket 14: 30%  bucket 13: 30%  bucket 14: 40%  bucket 13: 40%  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 13: 50%  bucket 14: 80%  bucket 13: 60%  bucket 14: 90%  bucket 13: 70%  bucket 13: 80%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  bucket 13: 90%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1256 for bucket 14  Sorting block time: 00:00:00Returning block of 1489 for bucket 13Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 2: 20%  bucket 1: 40%  bucket 2: 30%  bucket 1: 50%  bucket 1: 60%  bucket 2: 40%  bucket 1: 70%  bucket 2: 50%  bucket 1: 80%  bucket 2: 60%  bucket 1: 90%  bucket 2: 70%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 390 for bucket 1  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 3: 30%  bucket 4: 20%  bucket 3: 40%  bucket 4: 30%  bucket 3: 50%  bucket 3: 60%  bucket 4: 40%  bucket 3: 70%  bucket 4: 50%  bucket 3: 80%  bucket 3: 90%  bucket 4: 60%  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  bucket 4: 70%  bucket 4: 80%  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1230 for bucket 3  Sorting block time: 00:00:00Returning block of 1202 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:  bucket 5: 10%  bucket 5: 20%Getting block 6 of 15  bucket 5: 30%  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  bucket 5: 40%  Entering block accumulator loop for bucket 6:  bucket 5: 50%  bucket 6: 10%  bucket 6: 20%  bucket 5: 60%  bucket 6: 30%  bucket 5: 70%  bucket 6: 40%  bucket 5: 80%  bucket 6: 50%  bucket 5: 90%  bucket 6: 60%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  bucket 6: 70%  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1531 for bucket 5  Sorting block time: 00:00:00Returning block of 482 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  bucket 7: 10%  Entering block accumulator loop for bucket 8:  bucket 7: 20%  bucket 8: 10%  bucket 7: 30%  bucket 7: 40%  bucket 8: 20%  bucket 7: 50%  bucket 8: 30%  bucket 7: 60%  bucket 8: 40%  bucket 7: 70%  bucket 8: 50%  bucket 7: 80%  bucket 8: 60%  bucket 7: 90%  bucket 8: 70%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1496 for bucket 7  Sorting block time: 00:00:00Returning block of 1180 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9Getting block 10 of 15  Calculating Z arrays for bucket 9  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 10: 20%  bucket 9: 20%  bucket 10: 30%  bucket 9: 30%  bucket 9: 40%  bucket 10: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 10: 60%  bucket 9: 70%  bucket 10: 70%  bucket 9: 80%  bucket 10: 80%  bucket 9: 90%  bucket 10: 90%  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1340 for bucket 9  Sorting block time: 00:00:00Returning block of 939 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:Getting block 12 of 15  bucket 11: 10%  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 20%  Entering block accumulator loop for bucket 12:  bucket 11: 30%  bucket 11: 40%  bucket 12: 10%  bucket 11: 50%  bucket 12: 20%  bucket 11: 60%  bucket 11: 70%  bucket 12: 30%  bucket 11: 80%  bucket 11: 90%  bucket 12: 40%  bucket 11: 100%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 50%  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  Sorting block time: 00:00:00Returning block of 1106 for bucket 11  bucket 12: 90%  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13Getting block 14 of 15  Calculating Z arrays for bucket 13  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 14:  bucket 13: 10%  bucket 14: 10%  bucket 13: 20%  bucket 13: 30%  bucket 14: 20%  bucket 13: 40%  bucket 13: 50%  bucket 14: 30%  bucket 13: 60%  bucket 13: 70%  bucket 14: 40%  bucket 13: 80%  bucket 13: 90%  bucket 14: 50%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  Sorting block time: 00:00:00Returning block of 1170 for bucket 13  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #8)" name="7" time="58.379002809524536">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/a/a/8/dataset_aa80b840-88b2-43bd-85bc-8725c944d87d.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 2: 20%  bucket 1: 30%  bucket 2: 30%  bucket 1: 40%  bucket 2: 40%  bucket 1: 50%  bucket 2: 50%  bucket 2: 60%  bucket 1: 60%  bucket 2: 70%  bucket 1: 70%  bucket 2: 80%  bucket 1: 80%  bucket 2: 90%  bucket 1: 90%  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  bucket 1: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  Sorting block time: 00:00:00Returning block of 850 for bucket 2  Sorting block time: 00:00:00Returning block of 1408 for bucket 1Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 3: 30%  bucket 4: 20%  bucket 3: 40%  bucket 4: 30%  bucket 3: 50%  bucket 4: 40%  bucket 3: 60%  bucket 4: 50%  bucket 3: 70%  bucket 4: 60%  bucket 3: 80%  bucket 4: 70%  bucket 3: 90%  bucket 4: 80%  bucket 4: 90%  bucket 3: 100%  bucket 4: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  Sorting block of length 1478 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1053 for bucket 3  Sorting block time: 00:00:00Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:  bucket 5: 10%Getting block 6 of 15  Reserving size (1554) for bucket 6  bucket 5: 20%  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 5: 30%  bucket 6: 10%  bucket 5: 40%  bucket 6: 20%  bucket 5: 50%  bucket 6: 30%  bucket 5: 60%  bucket 6: 40%  bucket 5: 70%  bucket 6: 50%  bucket 5: 80%  bucket 6: 60%  bucket 5: 90%  bucket 6: 70%  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7Getting block 8 of 15  Entering block accumulator loop for bucket 7:  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 7: 10%  bucket 8: 10%  bucket 7: 20%  bucket 8: 20%  bucket 7: 30%  bucket 8: 30%  bucket 8: 40%  bucket 7: 40%  bucket 8: 50%  bucket 7: 50%  bucket 8: 60%  bucket 7: 60%  bucket 8: 70%  bucket 7: 70%  bucket 8: 80%  bucket 7: 80%  bucket 8: 90%  bucket 8: 100%  bucket 7: 90%  Sorting block of length 543 for bucket 8  (Using difference cover)  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  Sorting block time: 00:00:00Returning block of 544 for bucket 8  Sorting block time: 00:00:00Returning block of 1387 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%Getting block 10 of 15  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  bucket 9: 20%  Entering block accumulator loop for bucket 10:  bucket 9: 30%  bucket 10: 10%  bucket 9: 40%  bucket 10: 20%  bucket 9: 50%  bucket 9: 60%  bucket 10: 30%  bucket 9: 70%  bucket 10: 40%  bucket 10: 50%  bucket 9: 80%  bucket 9: 90%  bucket 10: 60%  bucket 10: 70%  bucket 9: 100%  bucket 10: 80%  Sorting block of length 1302 for bucket 9  (Using difference cover)  bucket 10: 90%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1303 for bucket 9  Sorting block time: 00:00:00Returning block of 682 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%Getting block 12 of 15  Reserving size (1554) for bucket 12  bucket 11: 20%  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 11: 30%  bucket 12: 10%  bucket 12: 20%  bucket 11: 40%  bucket 12: 30%  bucket 11: 50%  bucket 12: 40%  bucket 12: 50%  bucket 11: 60%  bucket 12: 60%  bucket 11: 70%  bucket 12: 70%  bucket 12: 80%  bucket 11: 80%  bucket 12: 90%  bucket 11: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 717 for bucket 12  Sorting block time: 00:00:00Returning block of 1078 for bucket 11Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 13: 20%  bucket 13: 30%  bucket 13: 40%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  bucket 13: 50%  Entering block accumulator loop for bucket 14:  bucket 13: 60%  bucket 14: 10%  bucket 13: 70%  bucket 14: 20%  bucket 13: 80%  bucket 14: 30%  bucket 13: 90%  bucket 14: 40%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  Sorting block time: 00:00:00  (Using difference cover)Returning block of 1489 for bucket 13  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 2: 20%  bucket 1: 40%  bucket 2: 30%  bucket 1: 50%  bucket 2: 40%  bucket 1: 60%  bucket 2: 50%  bucket 1: 70%  bucket 2: 60%  bucket 1: 80%  bucket 2: 70%  bucket 1: 90%  bucket 2: 80%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 90%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 390 for bucket 1  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 3: 20%  bucket 4: 10%  bucket 3: 30%  bucket 4: 20%  bucket 3: 40%  bucket 3: 50%  bucket 3: 60%  bucket 4: 30%  bucket 3: 70%  bucket 3: 80%  bucket 4: 40%  bucket 3: 90%  bucket 4: 50%  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  bucket 4: 60%  bucket 4: 70%  bucket 4: 80%  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1230 for bucket 3  Sorting block time: 00:00:00Returning block of 1202 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:  bucket 5: 10%  bucket 5: 20%Getting block 6 of 15  Reserving size (1554) for bucket 6  bucket 5: 30%  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 5: 40%  bucket 6: 10%  bucket 5: 50%  bucket 5: 60%  bucket 6: 20%  bucket 5: 70%  bucket 6: 30%  bucket 5: 80%  bucket 6: 40%  bucket 5: 90%  bucket 6: 50%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  bucket 6: 60%  bucket 6: 70%  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1531 for bucket 5  Sorting block time: 00:00:00Returning block of 482 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:Getting block 8 of 15  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  bucket 7: 10%  Entering block accumulator loop for bucket 8:  bucket 7: 20%  bucket 8: 10%  bucket 7: 30%  bucket 8: 20%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 7: 60%  bucket 8: 50%  bucket 7: 70%  bucket 7: 80%  bucket 8: 60%  bucket 7: 90%  bucket 8: 70%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1496 for bucket 7  Sorting block time: 00:00:00Returning block of 1180 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:Getting block 10 of 15  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 9: 20%  bucket 10: 10%  bucket 9: 30%  bucket 10: 20%  bucket 9: 40%  bucket 10: 30%  bucket 9: 50%  bucket 10: 40%  bucket 9: 60%  bucket 10: 50%  bucket 9: 70%  bucket 10: 60%  bucket 9: 80%  bucket 10: 70%  bucket 9: 90%  bucket 10: 80%  bucket 9: 100%  bucket 10: 90%  Sorting block of length 1339 for bucket 9  (Using difference cover)  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 939 for bucket 10  Sorting block time: 00:00:00Returning block of 1340 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%  bucket 11: 30%  bucket 11: 40%  bucket 11: 50%  bucket 11: 60%Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 70%  Entering block accumulator loop for bucket 12:  bucket 11: 80%  bucket 11: 90%  bucket 12: 10%  bucket 11: 100%  bucket 12: 20%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 30%  bucket 12: 40%  bucket 12: 50%  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  Sorting block time: 00:00:00Returning block of 1106 for bucket 11  bucket 12: 90%  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 13: 10%  bucket 14: 10%  bucket 13: 20%  bucket 13: 30%  bucket 14: 20%  bucket 13: 40%  bucket 14: 30%  bucket 13: 50%  bucket 13: 60%  bucket 14: 40%  bucket 13: 70%  bucket 14: 50%  bucket 13: 80%  bucket 14: 60%  bucket 13: 90%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      7 (7.22%) aligned discordantly 1 time    ----    90 pairs aligned 0 times concordantly or discordantly; of these:      180 mates make up the pairs; of these:        156 (86.67%) aligned 0 times        24 (13.33%) aligned exactly 1 time        0 (0.00%) aligned >1 times22.00% overall alignment rate[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #9)" name="8" time="48.540186643600464">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/8/b/9/dataset_8b94d0d5-510c-4989-ac78-a49609dc1199.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 1: 30%  bucket 2: 20%  bucket 1: 40%  bucket 1: 50%  bucket 2: 30%  bucket 1: 60%  bucket 1: 70%  bucket 2: 40%  bucket 1: 80%  bucket 2: 50%  bucket 1: 90%  bucket 2: 60%  bucket 1: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  bucket 2: 70%  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1408 for bucket 1  Sorting block time: 00:00:00Returning block of 850 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 3: 20%  bucket 3: 30%  bucket 4: 20%  bucket 3: 40%  bucket 4: 30%  bucket 3: 50%  bucket 3: 60%  bucket 4: 40%  bucket 3: 70%  bucket 4: 50%  bucket 3: 80%  bucket 3: 90%  bucket 4: 60%  bucket 3: 100%  Sorting block of length 1052 for bucket 3  (Using difference cover)  bucket 4: 70%  bucket 4: 80%  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1478 for bucket 4  Sorting block time: 00:00:00  (Using difference cover)Returning block of 1053 for bucket 3  Sorting block time: 00:00:00Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5Getting block 6 of 15  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 6: 10%  bucket 6: 20%  bucket 5: 20%  bucket 6: 30%  bucket 5: 30%  bucket 6: 40%  bucket 5: 40%  bucket 6: 50%  bucket 6: 60%  bucket 5: 50%  bucket 6: 70%  bucket 5: 60%  bucket 6: 80%  bucket 6: 90%  bucket 5: 70%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  bucket 5: 80%  bucket 5: 90%  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1247 for bucket 6  Sorting block time: 00:00:00Returning block of 547 for bucket 5Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:  bucket 7: 10%  bucket 7: 20%Getting block 8 of 15  bucket 7: 30%  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  bucket 7: 40%  Entering block accumulator loop for bucket 8:  bucket 7: 50%  bucket 8: 10%  bucket 7: 60%  bucket 7: 70%  bucket 8: 20%  bucket 7: 80%  bucket 8: 30%  bucket 7: 90%  bucket 7: 100%  bucket 8: 40%  Sorting block of length 1386 for bucket 7  (Using difference cover)  bucket 8: 50%  bucket 8: 60%  bucket 8: 70%  bucket 8: 80%  Sorting block time: 00:00:00Returning block of 1387 for bucket 7  bucket 8: 90%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 544 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9Getting block 10 of 15  Calculating Z arrays for bucket 9  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 10: 10%  bucket 9: 10%  bucket 10: 20%  bucket 9: 20%  bucket 10: 30%  bucket 9: 30%  bucket 10: 40%  bucket 9: 40%  bucket 10: 50%  bucket 9: 50%  bucket 10: 60%  bucket 9: 60%  bucket 10: 70%  bucket 9: 70%  bucket 10: 80%  bucket 9: 80%  bucket 10: 90%  bucket 9: 90%  bucket 10: 100%  Sorting block of length 681 for bucket 10  (Using difference cover)  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 682 for bucket 10  Sorting block time: 00:00:00Returning block of 1303 for bucket 9Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 11: 10%  bucket 12: 10%  bucket 11: 20%  bucket 12: 20%  bucket 11: 30%  bucket 12: 30%  bucket 11: 40%  bucket 12: 40%  bucket 11: 50%  bucket 12: 50%  bucket 11: 60%  bucket 12: 60%  bucket 11: 70%  bucket 11: 80%  bucket 12: 70%  bucket 11: 90%  bucket 12: 80%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 90%  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 717 for bucket 12Returning block of 1078 for bucket 11Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%Getting block 14 of 15  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  bucket 13: 20%  Entering block accumulator loop for bucket 14:  bucket 13: 30%  bucket 14: 10%  bucket 13: 40%  bucket 13: 50%  bucket 14: 20%  bucket 13: 60%  bucket 14: 30%  bucket 13: 70%  bucket 14: 40%  bucket 13: 80%  bucket 14: 50%  bucket 13: 90%  bucket 14: 60%  bucket 13: 100%  bucket 14: 70%  Sorting block of length 1488 for bucket 13  (Using difference cover)  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1489 for bucket 13  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1  Calculating Z arrays for bucket 1Getting block 2 of 15  Entering block accumulator loop for bucket 1:  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  bucket 1: 10%  Entering block accumulator loop for bucket 2:  bucket 1: 20%  bucket 2: 10%  bucket 1: 30%  bucket 1: 40%  bucket 2: 20%  bucket 1: 50%  bucket 2: 30%  bucket 1: 60%  bucket 2: 40%  bucket 1: 70%  bucket 2: 50%  bucket 1: 80%  bucket 2: 60%  bucket 1: 90%  bucket 2: 70%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  bucket 2: 80%  bucket 2: 90%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00Returning block of 390 for bucket 1  Sorting block time: 00:00:00Returning block of 1284 for bucket 2Getting block 3 of 15  Reserving size (1554) for bucket 3Getting block 4 of 15  Calculating Z arrays for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 3:  bucket 4: 10%  bucket 3: 10%  bucket 4: 20%  bucket 4: 30%  bucket 3: 20%  bucket 4: 40%  bucket 3: 30%  bucket 4: 50%  bucket 3: 40%  bucket 4: 60%  bucket 4: 70%  bucket 3: 50%  bucket 4: 80%  bucket 3: 60%  bucket 3: 70%  bucket 4: 90%  bucket 3: 80%  bucket 3: 90%  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1202 for bucket 4  Sorting block time: 00:00:00Returning block of 1230 for bucket 3Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:Getting block 6 of 15  Reserving size (1554) for bucket 6  bucket 5: 10%  Calculating Z arrays for bucket 6  bucket 5: 20%  Entering block accumulator loop for bucket 6:  bucket 5: 30%  bucket 6: 10%  bucket 5: 40%  bucket 6: 20%  bucket 5: 50%  bucket 5: 60%  bucket 6: 30%  bucket 5: 70%  bucket 6: 40%  bucket 5: 80%  bucket 5: 90%  bucket 6: 50%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  (Using difference cover)  bucket 6: 60%  bucket 6: 70%  bucket 6: 80%  bucket 6: 90%  bucket 6: 100%  Sorting block time: 00:00:00  Sorting block of length 481 for bucket 6  (Using difference cover)Returning block of 1531 for bucket 5  Sorting block time: 00:00:00Returning block of 482 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:  bucket 7: 10%  bucket 7: 20%Getting block 8 of 15  bucket 7: 30%  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 7: 40%  bucket 7: 50%  bucket 8: 10%  bucket 7: 60%  bucket 8: 20%  bucket 7: 70%  bucket 8: 30%  bucket 7: 80%  bucket 8: 40%  bucket 7: 90%  bucket 8: 50%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 60%  bucket 8: 70%  bucket 8: 80%  bucket 8: 90%  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1496 for bucket 7  Sorting block time: 00:00:00Returning block of 1180 for bucket 8Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 15  Entering block accumulator loop for bucket 9:  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 9: 30%  bucket 10: 30%  bucket 9: 40%  bucket 10: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 10: 60%  bucket 9: 70%  bucket 10: 70%  bucket 9: 80%  bucket 10: 80%  bucket 9: 90%  bucket 10: 90%  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1340 for bucket 9  Sorting block time: 00:00:00Returning block of 939 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:Getting block 12 of 15  Reserving size (1554) for bucket 12  bucket 11: 10%  Calculating Z arrays for bucket 12  bucket 11: 20%  Entering block accumulator loop for bucket 12:  bucket 11: 30%  bucket 12: 10%  bucket 11: 40%  bucket 11: 50%  bucket 12: 20%  bucket 11: 60%  bucket 12: 30%  bucket 11: 70%  bucket 12: 40%  bucket 11: 80%  bucket 12: 50%  bucket 11: 90%  bucket 12: 60%  bucket 11: 100%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1106 for bucket 11  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13Getting block 14 of 15  Calculating Z arrays for bucket 13  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 14:  bucket 13: 10%  bucket 14: 10%  bucket 13: 20%  bucket 14: 20%  bucket 13: 30%  bucket 14: 30%  bucket 13: 40%  bucket 14: 40%  bucket 13: 50%  bucket 14: 50%  bucket 13: 60%  bucket 14: 60%  bucket 13: 70%  bucket 14: 70%  bucket 13: 80%  bucket 13: 90%  bucket 14: 80%  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  bucket 14: 90%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13  Sorting block time: 00:00:00Returning block of 967 for bucket 14Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:01
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      7 (7.22%) aligned discordantly 1 time    ----    90 pairs aligned 0 times concordantly or discordantly; of these:      180 mates make up the pairs; of these:        156 (86.67%) aligned 0 times        24 (13.33%) aligned exactly 1 time        0 (0.00%) aligned >1 times22.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0 (Test #10)" name="9" time="48.44977021217346">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 8  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/8/b/9/dataset_8b94d0d5-510c-4989-ac78-a49609dc1199.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 2, merged 0; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 2; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 1  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 2: 10%  bucket 1: 10%  bucket 2: 20%  bucket 1: 20%  bucket 2: 30%  bucket 2: 40%  bucket 1: 30%  bucket 2: 50%  bucket 1: 40%  bucket 1: 50%  bucket 2: 60%  bucket 1: 60%  bucket 2: 70%  bucket 1: 70%  bucket 2: 80%  bucket 1: 80%  bucket 2: 90%  bucket 1: 90%  bucket 1: 100%  bucket 2: 100%  Sorting block of length 1407 for bucket 1  (Using difference cover)  Sorting block of length 849 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 1408 for bucket 1Returning block of 850 for bucket 2Getting block 3 of 15Getting block 4 of 15  Reserving size (1554) for bucket 3  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 3:  bucket 4: 10%  bucket 3: 10%  bucket 4: 20%  bucket 3: 20%  bucket 4: 30%  bucket 3: 30%  bucket 4: 40%  bucket 3: 40%  bucket 4: 50%  bucket 3: 50%  bucket 4: 60%  bucket 3: 60%  bucket 4: 70%  bucket 3: 70%  bucket 4: 80%  bucket 3: 80%  bucket 4: 90%  bucket 3: 90%  bucket 4: 100%  bucket 3: 100%  Sorting block of length 1478 for bucket 4  (Using difference cover)  Sorting block of length 1052 for bucket 3  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1053 for bucket 3  Sorting block time: 00:00:00Returning block of 1479 for bucket 4Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5Getting block 6 of 15  Entering block accumulator loop for bucket 5:  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 6:  bucket 5: 10%  bucket 6: 10%  bucket 5: 20%  bucket 6: 20%  bucket 5: 30%  bucket 6: 30%  bucket 5: 40%  bucket 6: 40%  bucket 6: 50%  bucket 5: 50%  bucket 6: 60%  bucket 5: 60%  bucket 6: 70%  bucket 5: 70%  bucket 6: 80%  bucket 5: 80%  bucket 6: 90%  bucket 5: 90%  bucket 6: 100%  Sorting block of length 1246 for bucket 6  (Using difference cover)  bucket 5: 100%  Sorting block of length 546 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 547 for bucket 5  Sorting block time: 00:00:00Returning block of 1247 for bucket 6Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:Getting block 8 of 15  bucket 7: 10%  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 7: 20%  bucket 7: 30%  bucket 8: 10%  bucket 8: 20%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 8: 50%  bucket 7: 60%  bucket 8: 60%  bucket 7: 70%  bucket 8: 70%  bucket 8: 80%  bucket 7: 80%  bucket 8: 90%  bucket 7: 90%  bucket 8: 100%  Sorting block of length 543 for bucket 8  (Using difference cover)  bucket 7: 100%  Sorting block of length 1386 for bucket 7  (Using difference cover)  Sorting block time: 00:00:00Returning block of 544 for bucket 8  Sorting block time: 00:00:00Returning block of 1387 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%  bucket 9: 20%  bucket 9: 30%Getting block 10 of 15  bucket 9: 40%  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 50%  bucket 10: 10%  bucket 9: 60%  bucket 10: 20%  bucket 9: 70%  bucket 10: 30%  bucket 9: 80%  bucket 10: 40%  bucket 9: 90%  bucket 10: 50%  bucket 9: 100%  Sorting block of length 1302 for bucket 9  (Using difference cover)  bucket 10: 60%  bucket 10: 70%  bucket 10: 80%  bucket 10: 90%  bucket 10: 100%  Sorting block time: 00:00:00  Sorting block of length 681 for bucket 10  (Using difference cover)Returning block of 1303 for bucket 9  Sorting block time: 00:00:00Returning block of 682 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%  bucket 11: 20%Getting block 12 of 15  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 30%  Entering block accumulator loop for bucket 12:  bucket 12: 10%  bucket 11: 40%  bucket 12: 20%  bucket 11: 50%  bucket 12: 30%  bucket 12: 40%  bucket 11: 60%  bucket 12: 50%  bucket 12: 60%  bucket 11: 70%  bucket 12: 70%  bucket 11: 80%  bucket 12: 80%  bucket 11: 90%  bucket 12: 90%  bucket 11: 100%  Sorting block of length 1077 for bucket 11  (Using difference cover)  bucket 12: 100%  Sorting block of length 716 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 717 for bucket 12  Sorting block time: 00:00:00Returning block of 1078 for bucket 11Getting block 13 of 15  Reserving size (1554) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:Getting block 14 of 15  Reserving size (1554) for bucket 14  bucket 13: 10%  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 13: 20%  bucket 14: 10%  bucket 13: 30%  bucket 14: 20%  bucket 13: 40%  bucket 14: 30%  bucket 13: 50%  bucket 14: 40%  bucket 13: 60%  bucket 14: 50%  bucket 13: 70%  bucket 14: 60%  bucket 13: 80%  bucket 14: 70%  bucket 13: 90%  bucket 14: 80%  bucket 13: 100%  Sorting block of length 1488 for bucket 13  (Using difference cover)  bucket 14: 90%  bucket 14: 100%  Sorting block of length 1255 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 1256 for bucket 14Returning block of 1489 for bucket 13Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1528 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1529 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 0Total time for call to driver() for forward index: 00:00:00Reading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00  Time to reverse reference sequence: 00:00:00bmax according to bmaxDivN setting: 2071Using parameters --bmax 1554 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 22 sample suffixesGenerating random suffixesQSorting 22 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 22 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 2, merged 10; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 1, merged 1; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 1103.6 (target: 1553)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 15  Reserving size (1554) for bucket 1Getting block 2 of 15  Calculating Z arrays for bucket 1  Reserving size (1554) for bucket 2  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 2:  bucket 1: 10%  bucket 2: 10%  bucket 1: 20%  bucket 2: 20%  bucket 2: 30%  bucket 1: 30%  bucket 2: 40%  bucket 1: 40%  bucket 2: 50%  bucket 1: 50%  bucket 2: 60%  bucket 1: 60%  bucket 2: 70%  bucket 2: 80%  bucket 1: 70%  bucket 2: 90%  bucket 1: 80%  bucket 2: 100%  Sorting block of length 1283 for bucket 2  (Using difference cover)  bucket 1: 90%  bucket 1: 100%  Sorting block of length 389 for bucket 1  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1284 for bucket 2  Sorting block time: 00:00:00Returning block of 390 for bucket 1Getting block 3 of 15  Reserving size (1554) for bucket 3  Calculating Z arrays for bucket 3Getting block 4 of 15  Reserving size (1554) for bucket 4  Calculating Z arrays for bucket 4  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  bucket 3: 10%  bucket 4: 10%  bucket 4: 20%  bucket 3: 20%  bucket 4: 30%  bucket 4: 40%  bucket 3: 30%  bucket 4: 50%  bucket 4: 60%  bucket 3: 40%  bucket 4: 70%  bucket 4: 80%  bucket 3: 50%  bucket 4: 90%  bucket 4: 100%  Sorting block of length 1201 for bucket 4  (Using difference cover)  bucket 3: 60%  bucket 3: 70%  bucket 3: 80%  bucket 3: 90%  Sorting block time: 00:00:00Returning block of 1202 for bucket 4  bucket 3: 100%  Sorting block of length 1229 for bucket 3  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1230 for bucket 3Getting block 5 of 15  Reserving size (1554) for bucket 5  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 5:Getting block 6 of 15  Reserving size (1554) for bucket 6  Calculating Z arrays for bucket 6  bucket 5: 10%  Entering block accumulator loop for bucket 6:  bucket 6: 10%  bucket 5: 20%  bucket 6: 20%  bucket 5: 30%  bucket 6: 30%  bucket 6: 40%  bucket 5: 40%  bucket 6: 50%  bucket 5: 50%  bucket 6: 60%  bucket 6: 70%  bucket 5: 60%  bucket 6: 80%  bucket 5: 70%  bucket 6: 90%  bucket 6: 100%  Sorting block of length 481 for bucket 6  (Using difference cover)  bucket 5: 80%  bucket 5: 90%  bucket 5: 100%  Sorting block of length 1530 for bucket 5  Sorting block time: 00:00:00  (Using difference cover)Returning block of 482 for bucket 6  Sorting block time: 00:00:00Returning block of 1531 for bucket 5Getting block 7 of 15  Reserving size (1554) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 7:Getting block 8 of 15  bucket 7: 10%  Reserving size (1554) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:  bucket 7: 20%  bucket 8: 10%  bucket 7: 30%  bucket 8: 20%  bucket 7: 40%  bucket 8: 30%  bucket 7: 50%  bucket 8: 40%  bucket 7: 60%  bucket 8: 50%  bucket 7: 70%  bucket 8: 60%  bucket 7: 80%  bucket 8: 70%  bucket 7: 90%  bucket 8: 80%  bucket 8: 90%  bucket 7: 100%  Sorting block of length 1495 for bucket 7  (Using difference cover)  bucket 8: 100%  Sorting block of length 1179 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1180 for bucket 8  Sorting block time: 00:00:00Returning block of 1496 for bucket 7Getting block 9 of 15  Reserving size (1554) for bucket 9Getting block 10 of 15  Calculating Z arrays for bucket 9  Reserving size (1554) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 9: 30%  bucket 9: 40%  bucket 9: 50%  bucket 9: 60%  bucket 10: 30%  bucket 9: 70%  bucket 9: 80%  bucket 10: 40%  bucket 10: 50%  bucket 9: 90%  bucket 10: 60%  bucket 9: 100%  Sorting block of length 1339 for bucket 9  (Using difference cover)  bucket 10: 70%  bucket 10: 80%  bucket 10: 90%  bucket 10: 100%  Sorting block of length 938 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1340 for bucket 9  Sorting block time: 00:00:00Returning block of 939 for bucket 10Getting block 11 of 15  Reserving size (1554) for bucket 11Getting block 12 of 15  Calculating Z arrays for bucket 11  Reserving size (1554) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 11:  bucket 11: 10%  Entering block accumulator loop for bucket 12:  bucket 11: 20%  bucket 12: 10%  bucket 11: 30%  bucket 11: 40%  bucket 12: 20%  bucket 11: 50%  bucket 12: 30%  bucket 11: 60%  bucket 12: 40%  bucket 11: 70%  bucket 11: 80%  bucket 12: 50%  bucket 11: 90%  bucket 11: 100%  bucket 12: 60%  Sorting block of length 1105 for bucket 11  (Using difference cover)  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  Sorting block time: 00:00:00Returning block of 1106 for bucket 11  bucket 12: 100%  Sorting block of length 990 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 991 for bucket 12Getting block 13 of 15  Reserving size (1554) for bucket 13Getting block 14 of 15  Calculating Z arrays for bucket 13  Reserving size (1554) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 13: 10%  bucket 14: 20%  bucket 14: 30%  bucket 13: 20%  bucket 14: 40%  bucket 13: 30%  bucket 14: 50%  bucket 14: 60%  bucket 13: 40%  bucket 14: 70%  bucket 13: 50%  bucket 14: 80%  bucket 14: 90%  bucket 13: 60%  bucket 14: 100%  Sorting block of length 966 for bucket 14  (Using difference cover)  bucket 13: 70%  bucket 13: 80%  bucket 13: 90%  Sorting block time: 00:00:00Returning block of 967 for bucket 14  bucket 13: 100%  Sorting block of length 1169 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1170 for bucket 13Getting block 15 of 15  Reserving size (1554) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 1260 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 1261 for bucket 15Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:01
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      7 (7.22%) aligned discordantly 1 time    ----    90 pairs aligned 0 times concordantly or discordantly; of these:      180 mates make up the pairs; of these:        156 (86.67%) aligned 0 times        24 (13.33%) aligned exactly 1 time        0 (0.00%) aligned >1 times22.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4 (Test #1)" name="0" time="56.92666149139404">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.067 sec; CPU: 0.014 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.05 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/a/f/b/dataset_afb6bf8e-6580-4660-80a9-4935a167e713.dat[main] Real time: 0.024 sec; CPU: 0.055 sec[bwa_aln_core] convert to sequence coordinate... 0.00 sec[bwa_aln_core] refine gapped alignments... 0.00 sec[bwa_aln_core] print alignments... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa samse localref.fa first.sai /galaxy/server/database/objects/a/f/b/dataset_afb6bf8e-6580-4660-80a9-4935a167e713.dat[main] Real time: 0.009 sec; CPU: 0.004 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4 (Test #2)" name="1" time="68.15489554405212">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.060 sec; CPU: 0.012 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.05 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/1/5/a/dataset_15aef924-d9ec-47ae-a0d2-0f21a06478be.dat[main] Real time: 0.029 sec; CPU: 0.053 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/a/e/e/dataset_aeeb3aea-2c3c-4651-b6f1-c5e6e2fec1bb.dat[main] Real time: 0.024 sec; CPU: 0.045 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/1/5/a/dataset_15aef924-d9ec-47ae-a0d2-0f21a06478be.dat /galaxy/server/database/objects/a/e/e/dataset_aeeb3aea-2c3c-4651-b6f1-c5e6e2fec1bb.dat[main] Real time: 0.014 sec; CPU: 0.005 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4 (Test #3)" name="2" time="61.240752935409546">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.060 sec; CPU: 0.010 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/6/a/a/dataset_6aa53ad1-fb7d-4a0d-bf71-6bf78895ffae.dat[main] Real time: 0.025 sec; CPU: 0.045 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/9/6/5/dataset_965e64e3-ce25-44c7-ac3e-f9483ee82c8b.dat[main] Real time: 0.026 sec; CPU: 0.038 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/6/a/a/dataset_6aa53ad1-fb7d-4a0d-bf71-6bf78895ffae.dat /galaxy/server/database/objects/9/6/5/dataset_965e64e3-ce25-44c7-ac3e-f9483ee82c8b.dat[main] Real time: 0.014 sec; CPU: 0.005 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4 (Test #4)" name="3" time="52.10569429397583">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.060 sec; CPU: 0.013 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.06 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 -b -1 localref.fa /galaxy/server/database/objects/7/8/f/dataset_78fd450f-2fb1-4ba8-82e6-46e00946335d.dat[main] Real time: 0.031 sec; CPU: 0.062 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 -b -2 localref.fa /galaxy/server/database/objects/7/8/f/dataset_78fd450f-2fb1-4ba8-82e6-46e00946335d.dat[main] Real time: 0.024 sec; CPU: 0.043 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/7/8/f/dataset_78fd450f-2fb1-4ba8-82e6-46e00946335d.dat /galaxy/server/database/objects/7/8/f/dataset_78fd450f-2fb1-4ba8-82e6-46e00946335d.dat[main] Real time: 0.015 sec; CPU: 0.007 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.17.4 (Test #5)" name="4" time="47.4415237903595">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.056 sec; CPU: 0.011 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/1/d/6/dataset_1d6a5648-5157-4848-a897-a25ccc5b2ba7.dat[main] Real time: 0.021 sec; CPU: 0.041 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 4 localref.fa /galaxy/server/database/objects/9/6/5/dataset_965e64e3-ce25-44c7-ac3e-f9483ee82c8b.dat[main] Real time: 0.023 sec; CPU: 0.040 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe -r @RG\tID:rg1\tPL:CAPILLARY localref.fa first.sai second.sai /galaxy/server/database/objects/1/d/6/dataset_1d6a5648-5157-4848-a897-a25ccc5b2ba7.dat /galaxy/server/database/objects/9/6/5/dataset_965e64e3-ce25-44c7-ac3e-f9483ee82c8b.dat[main] Real time: 0.011 sec; CPU: 0.005 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1 (Test #1)" name="0" time="36.790165185928345">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.057 sec; CPU: 0.014 sec[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)[M::mem_pestat] mean and std.dev: (192.97, 35.99)[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/1/d/6/dataset_1d6a5648-5157-4848-a897-a25ccc5b2ba7.dat /galaxy/server/database/objects/9/6/5/dataset_965e64e3-ce25-44c7-ac3e-f9483ee82c8b.dat[main] Real time: 0.020 sec; CPU: 0.040 sec[bam_sort_core] merging from 0 files and 4 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1 (Test #2)" name="1" time="41.23198413848877">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.077 sec; CPU: 0.012 sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/3/f/5/dataset_3f532ccd-873e-4a3c-a10a-08da0e18a49f.dat[main] Real time: 0.014 sec; CPU: 0.021 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1 (Test #3)" name="2" time="56.9837384223938">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 1.104 sec; CPU: 0.012 sec[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)[M::mem_pestat] mean and std.dev: (192.97, 35.99)[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 4 -v 1 localref.fa /galaxy/server/database/objects/9/6/d/dataset_96da7fd9-53a9-4094-825b-a5e29651b76b.dat /galaxy/server/database/objects/a/8/1/dataset_a817cafc-1dba-41bb-bb24-eaca94410e08.dat[main] Real time: 0.031 sec; CPU: 0.036 sec[bam_sort_core] merging from 0 files and 4 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1 (Test #4)" name="3" time="54.32689619064331">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a is localref.fa[main] Real time: 0.060 sec; CPU: 0.011 sec[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)[M::mem_pestat] mean and std.dev: (192.97, 35.99)[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 4 -v 1 -R @RG\tID:rg1\tPL:CAPILLARY\tLB:AARDVARK-1 localref.fa /galaxy/server/database/objects/f/4/c/dataset_f4c65d36-14e4-4718-93d3-7c9117de755f.dat /galaxy/server/database/objects/a/8/1/dataset_a817cafc-1dba-41bb-bb24-eaca94410e08.dat[main] Real time: 0.032 sec; CPU: 0.043 sec[bam_sort_core] merging from 0 files and 4 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper/1.3.2 (Test #1)" name="0" time="56.49072241783142">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper/1.3.2 (Test #2)" name="1" time="45.89577770233154">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2 (Test #1)" name="0" time="12.737093448638916">
        
            <error type="error" message="parameter 'target_2bit': an invalid option ('phiX174') was selected (valid options: /cvmfs/data.galaxyproject.org/byhand/Sscrofa9.58/seq/Sscrofa9.58.2bit,oryLat1,oryza_sativa_japonica_nipponbare_IRGSP4.0,panTro1,/cvmfs/data.galaxyproject.org/byhand/rheMac2/seq/rheMac2.2bit,Xanthomonas_oryzae_PXO99A,caeRem4,gadMor1,12931,dasNov3,ce2,papHam1,caePb3,/cvmfs/data.galaxyproject.org/byhand/droSec1/droSec1.2bit,/cvmfs/data.galaxyproject.org/byhand/anoCar1/anoCar1.2bit,loxAfr3,Tcas_3.0,sacCer1,panPan1,vicPac2,/cvmfs/data.galaxyproject.org/byhand/apiMel3/seq/apiMel3.2bit,caeJap1,nomLeu1,AaegL1,/cvmfs/data.galaxyproject.org/byhand/droMoj1/droMoj1.2bit,/cvmfs/data.galaxyproject.org/byhand/felCat3/seq/felCat3.2bit,echTel1,musFur1,aptMan1,/cvmfs/data.galaxyproject.org/byhand/dm3/seq/dm3.2bit,strPur3,vicPac1,cb3,otoGar3,nomLeu2,pseuAeru,eschColi_CFT073,Amel_4.5,278,hg38,triCas2,loxAfr1,borEut13,myoLuc2,/cvmfs/data.galaxyproject.org/byhand/mm8/seq/mm8.2bit,caeJap4,turTru2,tarSyr1,droSim1,dp4,/cvmfs/data.galaxyproject.org/byhand/droAna1/droAna1.2bit,bosTau2,IscaW1,gorGor3,/cvmfs/data.galaxyproject.org/byhand/calJac1/calJac1.2bit,/cvmfs/data.galaxyproject.org/byhand/xenTro2/seq/xenTro2.2bit,oryCun2,caePb1,oryLat2,bosTau5,Araly1,Bombyx_mori_p50T_2.0,droYak1,/cvmfs/data.galaxyproject.org/byhand/hg18/seq/hg18.2bit,eschColi_O157H7,cerSim1,16297,fr1,/cvmfs/data.galaxyproject.org/byhand/taeGut1/seq/taeGut1.2bit,/cvmfs/data.galaxyproject.org/byhand/droGri1/droGri1.2bit,panTro2,bosTau8,anoCar2,tupBel1,Spur_v2.6,/cvmfs/data.galaxyproject.org/byhand/danRer5/seq/danRer5.2bit,13953,galGal2,16351,sorAra1,speTri2,rheMac3,Hydra_JCVI,monDom1,/cvmfs/data.galaxyproject.org/byhand/strPur2/seq/strPur2.2bit,canFam1,monDom4,/cvmfs/data.galaxyproject.org/byhand/equCab2/seq/equCab2.2bit,/cvmfs/data.galaxyproject.org/byhand/phiX/seq/phiX.2bit,27835,caeRem1,caeRem3,CpipJ1,rn3,/cvmfs/data.galaxyproject.org/byhand/droVir2/droVir2.2bit,fr2,caeRem2,Homo_sapiens_AK1,allMis1,dasNov1,susScr1,melUnd1,priPac1,/cvmfs/data.galaxyproject.org/byhand/danRer6/seq/danRer7.2bit,Schizosaccharomyces_pombe_1.1,dp3,/cvmfs/data.galaxyproject.org/byhand/sacCer2/seq/sacCer2,/cvmfs/data.galaxyproject.org/byhand/droVir1/droVir1.2bit,bordBron,/cvmfs/data.galaxyproject.org/byhand/droAna2/droAna2.2bit,/cvmfs/data.galaxyproject.org/byhand/droPer1/droPer1.2bit,/cvmfs/data.galaxyproject.org/byhand/droMoj2/droMoj2.2bit,caePb2,otoGar1,eschColi_APEC_O1,dm2,hg19_rCRS_pUC18_phiX174,caeJap2,/cvmfs/data.galaxyproject.org/byhand/rn4/seq/rn4.2bit,/cvmfs/data.galaxyproject.org/byhand/droVir3/droVir3.2bit,ce7,178,/cvmfs/data.galaxyproject.org/byhand/anoGam1/anoGam1.2bit,/cvmfs/data.galaxyproject.org/byhand/hg19/seq/hg19.2bit,ce10,/cvmfs/data.galaxyproject.org/byhand/danRer6/seq/danRer6.2bit,danRer10,tetNig2,felCat4,AgamP3,/cvmfs/data.galaxyproject.org/byhand/hg18/seq/chr21.2bit,danRer4,rn5,droYak2,bosTau6,petMar1,/cvmfs/data.galaxyproject.org/byhand/droMoj3/droMoj3.2bit,eriEur1,saiBol1,baciSubt,Ptrichocarpa_156,bosTau7,venter1,dm6,/cvmfs/data.galaxyproject.org/byhand/bosTau4/seq/bosTau4.2bit,rn6,oviAri1,hg17,eschColi_TW14359,/cvmfs/data.galaxyproject.org/byhand/susScr2/seq/susScr2.2bit,bosTauMd3,13954,ce3,ente638,/cvmfs/data.galaxyproject.org/byhand/droEre2/droEre2.2bit,16720,/cvmfs/data.galaxyproject.org/byhand/mm9/seq/mm9.2bit,/cvmfs/data.galaxyproject.org/byhand/ce6/seq/ce6.2bit,mm10,bosTau3,ci2,nomLeu3,monDom5,ce9,20079,259,ponAbe2,sacCer3,galGal4,arabidopsis,ailMel1,tetNig1,/cvmfs/data.galaxyproject.org/byhand/canFam2/seq/canFam2.2bit,/cvmfs/data.galaxyproject.org/byhand/droEre1/droEre1.2bit,chrPic1,panTro4,eschColi_EC4115,oryCun1,gasAcu1,caeJap3,/cvmfs/data.galaxyproject.org/byhand/droAna3/droAna3.2bit,/cvmfs/data.galaxyproject.org/byhand/apiMel2/apiMel2.2bit,equCab1,felCat8,felCat5,cavPor3,ce8,ce4,lMaj5,calJac3,PhumU1,apiMel4,papAnu2,Zea_mays_B73_RefGen_v2,ce5,droWil1,Arabidopsis_thaliana_TAIR10,/cvmfs/data.galaxyproject.org/byhand/galGal3/seq/galGal3.2bit,xenTro1,hg_g1k_v37,aplCal1,Homo_sapiens_nuHg19_mtrCRS,burkPseu_1106A,panTro3,eschColi_K12,/cvmfs/data.galaxyproject.org/byhand/ornAna1/seq/ornAna1.2bit,apiMel1,dipOrd1,386,/cvmfs/data.galaxyproject.org/byhand/droGri2/droGri2.2bit,micMur1,braFlo1)"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027target_2bit\u0027: an invalid option (\u0027phiX174\u0027) was selected (valid options: /cvmfs/data.galaxyproject.org/byhand/Sscrofa9.58/seq/Sscrofa9.58.2bit,oryLat1,oryza_sativa_japonica_nipponbare_IRGSP4.0,panTro1,/cvmfs/data.galaxyproject.org/byhand/rheMac2/seq/rheMac2.2bit,Xanthomonas_oryzae_PXO99A,caeRem4,gadMor1,12931,dasNov3,ce2,papHam1,caePb3,/cvmfs/data.galaxyproject.org/byhand/droSec1/droSec1.2bit,/cvmfs/data.galaxyproject.org/byhand/anoCar1/anoCar1.2bit,loxAfr3,Tcas_3.0,sacCer1,panPan1,vicPac2,/cvmfs/data.galaxyproject.org/byhand/apiMel3/seq/apiMel3.2bit,caeJap1,nomLeu1,AaegL1,/cvmfs/data.galaxyproject.org/byhand/droMoj1/droMoj1.2bit,/cvmfs/data.galaxyproject.org/byhand/felCat3/seq/felCat3.2bit,echTel1,musFur1,aptMan1,/cvmfs/data.galaxyproject.org/byhand/dm3/seq/dm3.2bit,strPur3,vicPac1,cb3,otoGar3,nomLeu2,pseuAeru,eschColi_CFT073,Amel_4.5,278,hg38,triCas2,loxAfr1,borEut13,myoLuc2,/cvmfs/data.galaxyproject.org/byhand/mm8/seq/mm8.2bit,caeJap4,turTru2,tarSyr1,droSim1,dp4,/cvmfs/data.galaxyproject.org/byhand/droAna1/droAna1.2bit,bosTau2,IscaW1,gorGor3,/cvmfs/data.galaxyproject.org/byhand/calJac1/calJac1.2bit,/cvmfs/data.galaxyproject.org/byhand/xenTro2/seq/xenTro2.2bit,oryCun2,caePb1,oryLat2,bosTau5,Araly1,Bombyx_mori_p50T_2.0,droYak1,/cvmfs/data.galaxyproject.org/byhand/hg18/seq/hg18.2bit,eschColi_O157H7,cerSim1,16297,fr1,/cvmfs/data.galaxyproject.org/byhand/taeGut1/seq/taeGut1.2bit,/cvmfs/data.galaxyproject.org/byhand/droGri1/droGri1.2bit,panTro2,bosTau8,anoCar2,tupBel1,Spur_v2.6,/cvmfs/data.galaxyproject.org/byhand/danRer5/seq/danRer5.2bit,13953,galGal2,16351,sorAra1,speTri2,rheMac3,Hydra_JCVI,monDom1,/cvmfs/data.galaxyproject.org/byhand/strPur2/seq/strPur2.2bit,canFam1,monDom4,/cvmfs/data.galaxyproject.org/byhand/equCab2/seq/equCab2.2bit,/cvmfs/data.galaxyproject.org/byhand/phiX/seq/phiX.2bit,27835,caeRem1,caeRem3,CpipJ1,rn3,/cvmfs/data.galaxyproject.org/byhand/droVir2/droVir2.2bit,fr2,caeRem2,Homo_sapiens_AK1,allMis1,dasNov1,susScr1,melUnd1,priPac1,/cvmfs/data.galaxyproject.org/byhand/danRer6/seq/danRer7.2bit,Schizosaccharomyces_pombe_1.1,dp3,/cvmfs/data.galaxyproject.org/byhand/sacCer2/seq/sacCer2,/cvmfs/data.galaxyproject.org/byhand/droVir1/droVir1.2bit,bordBron,/cvmfs/data.galaxyproject.org/byhand/droAna2/droAna2.2bit,/cvmfs/data.galaxyproject.org/byhand/droPer1/droPer1.2bit,/cvmfs/data.galaxyproject.org/byhand/droMoj2/droMoj2.2bit,caePb2,otoGar1,eschColi_APEC_O1,dm2,hg19_rCRS_pUC18_phiX174,caeJap2,/cvmfs/data.galaxyproject.org/byhand/rn4/seq/rn4.2bit,/cvmfs/data.galaxyproject.org/byhand/droVir3/droVir3.2bit,ce7,178,/cvmfs/data.galaxyproject.org/byhand/anoGam1/anoGam1.2bit,/cvmfs/data.galaxyproject.org/byhand/hg19/seq/hg19.2bit,ce10,/cvmfs/data.galaxyproject.org/byhand/danRer6/seq/danRer6.2bit,danRer10,tetNig2,felCat4,AgamP3,/cvmfs/data.galaxyproject.org/byhand/hg18/seq/chr21.2bit,danRer4,rn5,droYak2,bosTau6,petMar1,/cvmfs/data.galaxyproject.org/byhand/droMoj3/droMoj3.2bit,eriEur1,saiBol1,baciSubt,Ptrichocarpa_156,bosTau7,venter1,dm6,/cvmfs/data.galaxyproject.org/byhand/bosTau4/seq/bosTau4.2bit,rn6,oviAri1,hg17,eschColi_TW14359,/cvmfs/data.galaxyproject.org/byhand/susScr2/seq/susScr2.2bit,bosTauMd3,13954,ce3,ente638,/cvmfs/data.galaxyproject.org/byhand/droEre2/droEre2.2bit,16720,/cvmfs/data.galaxyproject.org/byhand/mm9/seq/mm9.2bit,/cvmfs/data.galaxyproject.org/byhand/ce6/seq/ce6.2bit,mm10,bosTau3,ci2,nomLeu3,monDom5,ce9,20079,259,ponAbe2,sacCer3,galGal4,arabidopsis,ailMel1,tetNig1,/cvmfs/data.galaxyproject.org/byhand/canFam2/seq/canFam2.2bit,/cvmfs/data.galaxyproject.org/byhand/droEre1/droEre1.2bit,chrPic1,panTro4,eschColi_EC4115,oryCun1,gasAcu1,caeJap3,/cvmfs/data.galaxyproject.org/byhand/droAna3/droAna3.2bit,/cvmfs/data.galaxyproject.org/byhand/apiMel2/apiMel2.2bit,equCab1,felCat8,felCat5,cavPor3,ce8,ce4,lMaj5,calJac3,PhumU1,apiMel4,papAnu2,Zea_mays_B73_RefGen_v2,ce5,droWil1,Arabidopsis_thaliana_TAIR10,/cvmfs/data.galaxyproject.org/byhand/galGal3/seq/galGal3.2bit,xenTro1,hg_g1k_v37,aplCal1,Homo_sapiens_nuHg19_mtrCRS,burkPseu_1106A,panTro3,eschColi_K12,/cvmfs/data.galaxyproject.org/byhand/ornAna1/seq/ornAna1.2bit,apiMel1,dipOrd1,386,/cvmfs/data.galaxyproject.org/byhand/droGri2/droGri2.2bit,micMur1,braFlo1)", "inputs": {  "output_format|out|format": "general_def",  "query": {   "id": "e84e7a0f0dcc5284",   "src": "hda"  },  "source|ref_source": "cached",  "source|target_2bit": "phiX174",  "where_to_look|strand": "--strand=both" }, "status": "error", "test_index": 0, "time_seconds": 12.737093448638916, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2", "tool_version": "1.3.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2 (Test #2)" name="1" time="41.520832777023315">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2 (Test #3)" name="2" time="41.276222944259644">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2 (Test #4)" name="3" time="31.479680061340332">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2 (Test #5)" name="4" time="33.571810722351074">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2 (Test #6)" name="5" time="33.483405351638794">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2/1.3.2 (Test #7)" name="6" time="33.83853268623352">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2 (Test #1)" name="0" time="54.10958194732666">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "41d6f59a35ab1800",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "d75de2bb307a9a5f",   "src": "hda"  },  "single_or_paired|input_mate2": {   "id": "04a3e0bd639674ba",   "src": "hda"  },  "single_or_paired|single_or_paired_opts": "paired" }, "job": {  "command_line": "mkdir index_dir \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/6/f/b/dataset_6fb7db24-d5cc-4b45-8875-5ba2407d3a92.dat\u0027 index_dir/genome.fa \u0026\u0026 bwameth.py index index_dir/genome.fa \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/1/7/d/dataset_17d93e10-700e-43c0-bf42-db63db0a32e8.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/9/2/e/dataset_92ee0d7b-9433-4280-b0a1-198f5f258de4.dat\u0027 input_r.fastq.gz \u0026\u0026  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference \u0027index_dir/genome.fa\u0027   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -",  "command_version": "bwa-meth.py 0.2.2\n",  "create_time": "2021-05-01T18:00:53.000806",  "exit_code": 1,  "external_id": "gxy-pzklh",  "galaxy_version": "21.01",  "history_id": "8e6856ca87668da9",  "id": "3b35f9343c3c2da9",  "inputs": {   "input_mate1": {    "id": "d75de2bb307a9a5f",    "src": "hda",    "uuid": "17d93e10-700e-43c0-bf42-db63db0a32e8"   },   "input_mate2": {    "id": "04a3e0bd639674ba",    "src": "hda",    "uuid": "92ee0d7b-9433-4280-b0a1-198f5f258de4"   },   "reference": {    "id": "41d6f59a35ab1800",    "src": "hda",    "uuid": "6fb7db24-d5cc-4b45-8875-5ba2407d3a92"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   },   {    "code_desc": "",    "desc": "Fatal error: ",    "error_level": 3,    "match": "Error:",    "stream": "stderr",    "type": "regex"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1619892071.0000000",    "title": "Job End Time",    "value": "2021-05-01 18:01:11"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1619892071.0000000",    "title": "Job Start Time",    "value": "2021-05-01 18:01:11"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4000.0000000",    "title": "Memory Allocated (MB)",    "value": "4000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "outputs": {   "output": {    "id": "45ba9d6d645eb832",    "src": "hda",    "uuid": "a1208f56-368b-4335-8931-ef0ef37ecc39"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 224, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 225, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 226, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"paired\"}"  },  "state": "error",  "stderr": "converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nTraceback (most recent call last):\n  File \"/usr/local/bin/bwameth.py\", line 509, in \u003cmodule\u003e\n    main(sys.argv[1:])\n  File \"/usr/local/bin/bwameth.py\", line 470, in main\n    sys.exit(bwa_index(convert_fasta(args[1])))\n  File \"/usr/local/bin/bwameth.py\", line 179, in convert_fasta\n    for header, seq in fasta_iter(ref_fasta):\n  File \"/usr/local/bin/bwameth.py\", line 91, in fasta_iter\n    for header in faiter:\n  File \"/usr/local/bin/bwameth.py\", line 90, in \u003cgenexpr\u003e\n    faiter = (x[1] for x in groupby(fh, lambda line: line[0] == \"\u003e\"))\n  File \"/usr/local/lib/python3.8/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: \u0027utf-8\u0027 codec can\u0027t decode byte 0x8b in position 1: invalid start byte\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": "converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nTraceback (most recent call last):\n  File \"/usr/local/bin/bwameth.py\", line 509, in \u003cmodule\u003e\n    main(sys.argv[1:])\n  File \"/usr/local/bin/bwameth.py\", line 470, in main\n    sys.exit(bwa_index(convert_fasta(args[1])))\n  File \"/usr/local/bin/bwameth.py\", line 179, in convert_fasta\n    for header, seq in fasta_iter(ref_fasta):\n  File \"/usr/local/bin/bwameth.py\", line 91, in fasta_iter\n    for header in faiter:\n  File \"/usr/local/bin/bwameth.py\", line 90, in \u003cgenexpr\u003e\n    faiter = (x[1] for x in groupby(fh, lambda line: line[0] == \"\u003e\"))\n  File \"/usr/local/lib/python3.8/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: \u0027utf-8\u0027 codec can\u0027t decode byte 0x8b in position 1: invalid start byte\n",  "tool_stdout": "",  "update_time": "2021-05-01T18:01:12.614569",  "user_email": "alex@fake.org" }, "output_problems": [  "Job in error state.",  "Job in error state." ], "status": "failure", "test_index": 0, "time_seconds": 54.10958194732666, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tTraceback (most recent call last):  File "/usr/local/bin/bwameth.py", line 509, in <module>    main(sys.argv[1:])  File "/usr/local/bin/bwameth.py", line 470, in main    sys.exit(bwa_index(convert_fasta(args[1])))  File "/usr/local/bin/bwameth.py", line 179, in convert_fasta    for header, seq in fasta_iter(ref_fasta):  File "/usr/local/bin/bwameth.py", line 91, in fasta_iter    for header in faiter:  File "/usr/local/bin/bwameth.py", line 90, in <genexpr>    faiter = (x[1] for x in groupby(fh, lambda line: line[0] == ">"))  File "/usr/local/lib/python3.8/codecs.py", line 322, in decode    (result, consumed) = self._buffer_decode(data, self.errors, final)UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2 (Test #2)" name="1" time="41.543827295303345">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.02 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.86 seconds elapse.[bwa_index] Update BWT... 0.02 sec[bwa_index] Pack forward-only FASTA... 0.02 sec[bwa_index] Construct SA from BWT and Occ... 0.21 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 1.236 sec; CPU: 1.127 secconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing: index_dir/genome.fa.bwameth.c2t[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.028 CPU sec, 0.015 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 2 index_dir/genome.fa.bwameth.c2t -[main] Real time: 0.136 sec; CPU: 0.037 secrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 2  index_dir/genome.fa.bwameth.c2t -[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0 (Test #1)" name="0" time="34.45356822013855">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0 (Test #2)" name="1" time="39.32035160064697">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0 (Test #3)" name="2" time="40.224605083465576">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0 (Test #4)" name="3" time="32.8680853843689">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0 (Test #5)" name="4" time="29.824098110198975">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1 (Test #1)" name="0" time="48.918339014053345">
        
            
            <system-out><![CDATA[
            INFO [2021-05-01 18:03:09,839]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2021-05-01 18:03:09,859]: Adding 3 commands to mp-poolNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2021-05-01 18:03:13,391]: Executing lofreq filter -i /tmp/lofreq2_call_parallelkfz6w6w8/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1 (Test #2)" name="1" time="47.63323903083801">
        
            
            <system-out><![CDATA[
            INFO [2021-05-01 18:03:09,715]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2021-05-01 18:03:09,738]: Adding 3 commands to mp-poolNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2021-05-01 18:03:13,275]: Executing lofreq filter -i /tmp/lofreq2_call_parallelpqja1evv/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1 (Test #3)" name="2" time="36.234901666641235">
        
            
            <system-out><![CDATA[
            INFO [2021-05-01 18:03:22,125]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2021-05-01 18:03:22,146]: Adding 3 commands to mp-poolNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2021-05-01 18:03:26,169]: Executing lofreq filter -i /tmp/lofreq2_call_parallel5s6riyio/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1 (Test #4)" name="3" time="28.92508316040039">
        
            
            <system-out><![CDATA[
            INFO [2021-05-01 18:03:14,995]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2021-05-01 18:03:15,012]: Adding 3 commands to mp-poolNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2021-05-01 18:03:18,548]: Copying concatenated vcf file to final destination
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy1 (Test #5)" name="4" time="40.133196115493774">
        
            
            <system-out><![CDATA[
            INFO [2021-05-01 18:03:49,024]: Using 1 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2021-05-01 18:03:49,040]: Adding 3 commands to mp-poolNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2021-05-01 18:03:54,426]: Copying concatenated vcf file to final destination
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0 (Test #1)" name="0" time="15.489031791687012">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Skipping default settingsAt least one type of multiple testing correction requested. Doing first pass of vcfMTC application completedSuccessful exit.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0 (Test #2)" name="1" time="16.605655670166016">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Skipping default settingsAt least one type of multiple testing correction requested. Doing first pass of vcfMTC application completedSuccessful exit.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.5+galaxy0 (Test #3)" name="2" time="38.863285303115845">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Skipping default settingsAt least one type of multiple testing correction requested. Doing first pass of vcfMTC application completedSuccessful exit.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0 (Test #1)" name="0" time="26.132251024246216">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0 (Test #2)" name="1" time="36.90028476715088">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0 (Test #3)" name="2" time="36.47543454170227">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi/2.1.5+galaxy0 (Test #1)" name="0" time="58.73790884017944">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/lofreq_viterbi/lofreq_viterbi/2.1.5+galaxy0 (Test #2)" name="1" time="54.677680015563965">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #1)" name="0" time="38.34596514701843">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.009*0.44] collected minimizers[M::mm_idx_gen::0.011*0.62] sorted minimizers[M::main::0.011*0.62] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.011*0.62] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.011*0.63] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.016*0.88] mapped 100 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/d/4/d/dataset_d4d16210-fe4a-49f8-96a8-43b0809c1bbd.dat[M::main] Real time: 0.018 sec; CPU: 0.016 sec; Peak RSS: 0.004 GB[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #2)" name="1" time="35.40375542640686">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.009*0.38] collected minimizers[M::mm_idx_gen::0.011*0.55] sorted minimizers[M::main::0.011*0.56] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.011*0.56] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.011*0.56] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.020*0.59] mapped 100 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/4/d/2/dataset_4d200e44-00ed-4ffc-a97b-22cf336f696b.dat[M::main] Real time: 0.022 sec; CPU: 0.013 sec; Peak RSS: 0.004 GB[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #3)" name="2" time="43.40662240982056">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.007*0.53] collected minimizers[M::mm_idx_gen::0.008*0.70] sorted minimizers[M::main::0.008*0.70] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.008*0.70] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.009*0.71] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.028*0.85] mapped 200 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/7/8/9/dataset_78917c20-1a1b-4469-8a85-ab5660821459.dat /galaxy/server/database/objects/b/7/b/dataset_b7bc9feb-5e85-4407-827f-55b4aef63f3f.dat[M::main] Real time: 0.030 sec; CPU: 0.024 sec; Peak RSS: 0.004 GB[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #4)" name="3" time="53.50415658950806">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.007*0.56] collected minimizers[M::mm_idx_gen::0.008*0.72] sorted minimizers[M::main::0.008*0.72] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.008*0.72] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.009*0.73] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.024*0.96] mapped 200 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/9/f/4/dataset_9f4e7536-7ade-4bc0-9c2f-131c940aa637.dat /galaxy/server/database/objects/2/4/3/dataset_243ff83d-25b4-4519-9f63-c03aadc063ab.dat[M::main] Real time: 0.026 sec; CPU: 0.024 sec; Peak RSS: 0.004 GB[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #5)" name="4" time="31.119560480117798">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.87] collected minimizers[M::mm_idx_gen::0.007*0.98] sorted minimizers[M::main::0.007*0.98] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.007*0.98] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.007*0.98] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.019*1.28] mapped 200 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 2 -a reference.fa /galaxy/server/database/objects/a/a/7/dataset_aa7dd606-5e71-4d1d-baf7-b7dc1f65f8c6.dat /galaxy/server/database/objects/2/4/3/dataset_243ff83d-25b4-4519-9f63-c03aadc063ab.dat[M::main] Real time: 0.021 sec; CPU: 0.026 sec; Peak RSS: 0.004 GB[bam_sort_core] merging from 0 files and 2 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #6)" name="5" time="12.814223051071167">
        
            <error type="error" message="parameter 'ref_file': an invalid option ('bwa-mem-mt-genome') was selected (valid options: droMoj3,oryLat1,oryza_sativa_japonica_nipponbare_IRGSP4.0,hg18,danRer5,panTro1,Xanthomonas_oryzae_PXO99A,caeRem4,gadMor1,dm3,apiMel3,dasNov3,ce2,papHam1,caePb3,xenTro2,mm7,loxAfr3,Tcas_3.0,equCab2chrM,eschColi_O157H7_EC4115,galGal3,sacCer1,panPan1,pseuAeru_PA7,vicPac2,Tcacao_1.0,caeJap1,droEre2,droEre1,nomLeu1,AaegL1,echTel1,melGal1,Xanthomonas_oryzae_MAFF_311018,musFur1,aptMan1,strPur3,vicPac1,nomLeu2,otoGar3,droGri1,eschColi_CFT073,Amel_4.5,triCas2,hg38,loxAfr1,borEut13,myoLuc2,ci2full,latCha1,caeJap4,hg19,xenTro3,turTru2,tarSyr1,droMoj2,droSim1,burkPseu_K96243,dp4,mm9,taeGut1,bosTau2,IscaW1,gorGor3,oryCun2,caePb1,oryLat2,tetNig1canon,sacCer2,mm9canon,galGal3canon,hg38female,calJac1,burkPseu_1710B,bosTau5,hg38canon,Araly1,Bombyx_mori_p50T_2.0,droVir2,droPer1,sarHar1,droYak1,strPur2,eschColi_O157H7,cerSim1,fr1,danRer6,panTro2,ci2canon,bosTau8,anoCar2,eschColi_O157H7_EDL933,susScr3,tupBel1,Spur_v2.6,galGal2,cb3full,sorAra1,speTri2,hg19female,rheMac3,droGri2,Hydra_JCVI,monDom1,anoCar1,pseuAeru_UCBPP_PA14,canFam1,mm8,monDom4,criGri1,hg19chrX,hg19chrM,caeRem1,27835,caeRem3,bosTau4,CpipJ1,rn3,danRer3,fr2,caeRem2,Homo_sapiens_AK1,allMis1,dasNov1,susScr1,melUnd1,felCat3,hg18chr21,priPac1,mm8canon,ce6,droAna1,Schizosaccharomyces_pombe_1.1,dp3,bordBron,eschColi_O157H7_TW14359,cb3canon,Arabidopsis_thaliana_TAIR9,caePb2,otoGar1,rn3canon,eschColi_APEC_O1,dm2,Sscrofa9.58,galGal2canon,caeJap2,panTro1canon,hg19_rCRS_pUC18_phiX174,felCat4canon,ce7,canFam3,mm7canon,susScr2,ce10,eschColi_K12_W3110,danRer10,tetNig2,canFam2,felCat4,AgamP3,danRer4,rn5,droYak2,bosTau6,petMar1,droAna3,eriEur1,pUC18,saiBol1,panTro2canon,rn4canon,droSec1,hg18canon,baciSubt,Ptrichocarpa_156,bosTau7,venter1,apiMel2,hg17canon,dm6,strePneu_R6,Xanthomonas_oryzae_KACC10331,rn6,oviAri1,hg17,taeGut1canon,panTro3canon,bosTauMd3,droVir3,ce3,hetGla1,ente638,danRer2,mm10,choHof1,bosTau3,nomLeu3,ornAna1,monDom5,ce9,droMoj1,ponAbe2,pseuAeru_PAO1,sacCer3,galGal4,droAna2,geoFor1,tetNig2canon,ailMel1,tetNig1,chrPic1,droVir1,panTro4,equCab2,oryCun1,gasAcu1,anoGam1,caeJap3,equCab1,calJac3canon,felCat8,felCat5,cavPor3,ce8,ce4,mm9female,danRer7,lMaj5,phiX,taeGut2,rheMac2,calJac3,panTro3full,PhumU1,apiMel4,hg19canon,papAnu2,hg18nohaps,Zea_mays_B73_RefGen_v2,rn4,ce5,droWil1,Arabidopsis_thaliana_TAIR10,hg_g1k_v37,xenTro1,aplCal1,burkPseu_668,burkPseu_1106A,Homo_sapiens_nuHg19_mtrCRS,eschColi_K12,oryLat2canon,apiMel1,eschColi_K12_DH10B,dipOrd1,micMur1,braFlo1)"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027ref_file\u0027: an invalid option (\u0027bwa-mem-mt-genome\u0027) was selected (valid options: droMoj3,oryLat1,oryza_sativa_japonica_nipponbare_IRGSP4.0,hg18,danRer5,panTro1,Xanthomonas_oryzae_PXO99A,caeRem4,gadMor1,dm3,apiMel3,dasNov3,ce2,papHam1,caePb3,xenTro2,mm7,loxAfr3,Tcas_3.0,equCab2chrM,eschColi_O157H7_EC4115,galGal3,sacCer1,panPan1,pseuAeru_PA7,vicPac2,Tcacao_1.0,caeJap1,droEre2,droEre1,nomLeu1,AaegL1,echTel1,melGal1,Xanthomonas_oryzae_MAFF_311018,musFur1,aptMan1,strPur3,vicPac1,nomLeu2,otoGar3,droGri1,eschColi_CFT073,Amel_4.5,triCas2,hg38,loxAfr1,borEut13,myoLuc2,ci2full,latCha1,caeJap4,hg19,xenTro3,turTru2,tarSyr1,droMoj2,droSim1,burkPseu_K96243,dp4,mm9,taeGut1,bosTau2,IscaW1,gorGor3,oryCun2,caePb1,oryLat2,tetNig1canon,sacCer2,mm9canon,galGal3canon,hg38female,calJac1,burkPseu_1710B,bosTau5,hg38canon,Araly1,Bombyx_mori_p50T_2.0,droVir2,droPer1,sarHar1,droYak1,strPur2,eschColi_O157H7,cerSim1,fr1,danRer6,panTro2,ci2canon,bosTau8,anoCar2,eschColi_O157H7_EDL933,susScr3,tupBel1,Spur_v2.6,galGal2,cb3full,sorAra1,speTri2,hg19female,rheMac3,droGri2,Hydra_JCVI,monDom1,anoCar1,pseuAeru_UCBPP_PA14,canFam1,mm8,monDom4,criGri1,hg19chrX,hg19chrM,caeRem1,27835,caeRem3,bosTau4,CpipJ1,rn3,danRer3,fr2,caeRem2,Homo_sapiens_AK1,allMis1,dasNov1,susScr1,melUnd1,felCat3,hg18chr21,priPac1,mm8canon,ce6,droAna1,Schizosaccharomyces_pombe_1.1,dp3,bordBron,eschColi_O157H7_TW14359,cb3canon,Arabidopsis_thaliana_TAIR9,caePb2,otoGar1,rn3canon,eschColi_APEC_O1,dm2,Sscrofa9.58,galGal2canon,caeJap2,panTro1canon,hg19_rCRS_pUC18_phiX174,felCat4canon,ce7,canFam3,mm7canon,susScr2,ce10,eschColi_K12_W3110,danRer10,tetNig2,canFam2,felCat4,AgamP3,danRer4,rn5,droYak2,bosTau6,petMar1,droAna3,eriEur1,pUC18,saiBol1,panTro2canon,rn4canon,droSec1,hg18canon,baciSubt,Ptrichocarpa_156,bosTau7,venter1,apiMel2,hg17canon,dm6,strePneu_R6,Xanthomonas_oryzae_KACC10331,rn6,oviAri1,hg17,taeGut1canon,panTro3canon,bosTauMd3,droVir3,ce3,hetGla1,ente638,danRer2,mm10,choHof1,bosTau3,nomLeu3,ornAna1,monDom5,ce9,droMoj1,ponAbe2,pseuAeru_PAO1,sacCer3,galGal4,droAna2,geoFor1,tetNig2canon,ailMel1,tetNig1,chrPic1,droVir1,panTro4,equCab2,oryCun1,gasAcu1,anoGam1,caeJap3,equCab1,calJac3canon,felCat8,felCat5,cavPor3,ce8,ce4,mm9female,danRer7,lMaj5,phiX,taeGut2,rheMac2,calJac3,panTro3full,PhumU1,apiMel4,hg19canon,papAnu2,hg18nohaps,Zea_mays_B73_RefGen_v2,rn4,ce5,droWil1,Arabidopsis_thaliana_TAIR10,hg_g1k_v37,xenTro1,aplCal1,burkPseu_668,burkPseu_1106A,Homo_sapiens_nuHg19_mtrCRS,eschColi_K12,oryLat2canon,apiMel1,eschColi_K12_DH10B,dipOrd1,micMur1,braFlo1)", "inputs": {  "fastq_input|analysis_type_selector": "sr",  "fastq_input|fastq_input1": {   "id": "f2256347d1743822",   "src": "hda"  },  "fastq_input|fastq_input_selector": "single",  "reference_source|ref_file": "bwa-mem-mt-genome",  "reference_source|reference_source_selector": "cached" }, "status": "error", "test_index": 5, "time_seconds": 12.814223051071167, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "tool_version": "2.17+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #7)" name="6" time="8.261780738830566">
        
            <error type="error" message="parameter 'ref_file': an invalid option ('bwa-mem-mt-genome') was selected (valid options: droMoj3,oryLat1,oryza_sativa_japonica_nipponbare_IRGSP4.0,hg18,danRer5,panTro1,Xanthomonas_oryzae_PXO99A,caeRem4,gadMor1,dm3,apiMel3,dasNov3,ce2,papHam1,caePb3,xenTro2,mm7,loxAfr3,Tcas_3.0,equCab2chrM,eschColi_O157H7_EC4115,galGal3,sacCer1,panPan1,pseuAeru_PA7,vicPac2,Tcacao_1.0,caeJap1,droEre2,droEre1,nomLeu1,AaegL1,echTel1,melGal1,Xanthomonas_oryzae_MAFF_311018,musFur1,aptMan1,strPur3,vicPac1,nomLeu2,otoGar3,droGri1,eschColi_CFT073,Amel_4.5,triCas2,hg38,loxAfr1,borEut13,myoLuc2,ci2full,latCha1,caeJap4,hg19,xenTro3,turTru2,tarSyr1,droMoj2,droSim1,burkPseu_K96243,dp4,mm9,taeGut1,bosTau2,IscaW1,gorGor3,oryCun2,caePb1,oryLat2,tetNig1canon,sacCer2,mm9canon,galGal3canon,hg38female,calJac1,burkPseu_1710B,bosTau5,hg38canon,Araly1,Bombyx_mori_p50T_2.0,droVir2,droPer1,sarHar1,droYak1,strPur2,eschColi_O157H7,cerSim1,fr1,danRer6,panTro2,ci2canon,bosTau8,anoCar2,eschColi_O157H7_EDL933,susScr3,tupBel1,Spur_v2.6,galGal2,cb3full,sorAra1,speTri2,hg19female,rheMac3,droGri2,Hydra_JCVI,monDom1,anoCar1,pseuAeru_UCBPP_PA14,canFam1,mm8,monDom4,criGri1,hg19chrX,hg19chrM,caeRem1,27835,caeRem3,bosTau4,CpipJ1,rn3,danRer3,fr2,caeRem2,Homo_sapiens_AK1,allMis1,dasNov1,susScr1,melUnd1,felCat3,hg18chr21,priPac1,mm8canon,ce6,droAna1,Schizosaccharomyces_pombe_1.1,dp3,bordBron,eschColi_O157H7_TW14359,cb3canon,Arabidopsis_thaliana_TAIR9,caePb2,otoGar1,rn3canon,eschColi_APEC_O1,dm2,Sscrofa9.58,galGal2canon,caeJap2,panTro1canon,hg19_rCRS_pUC18_phiX174,felCat4canon,ce7,canFam3,mm7canon,susScr2,ce10,eschColi_K12_W3110,danRer10,tetNig2,canFam2,felCat4,AgamP3,danRer4,rn5,droYak2,bosTau6,petMar1,droAna3,eriEur1,pUC18,saiBol1,panTro2canon,rn4canon,droSec1,hg18canon,baciSubt,Ptrichocarpa_156,bosTau7,venter1,apiMel2,hg17canon,dm6,strePneu_R6,Xanthomonas_oryzae_KACC10331,rn6,oviAri1,hg17,taeGut1canon,panTro3canon,bosTauMd3,droVir3,ce3,hetGla1,ente638,danRer2,mm10,choHof1,bosTau3,nomLeu3,ornAna1,monDom5,ce9,droMoj1,ponAbe2,pseuAeru_PAO1,sacCer3,galGal4,droAna2,geoFor1,tetNig2canon,ailMel1,tetNig1,chrPic1,droVir1,panTro4,equCab2,oryCun1,gasAcu1,anoGam1,caeJap3,equCab1,calJac3canon,felCat8,felCat5,cavPor3,ce8,ce4,mm9female,danRer7,lMaj5,phiX,taeGut2,rheMac2,calJac3,panTro3full,PhumU1,apiMel4,hg19canon,papAnu2,hg18nohaps,Zea_mays_B73_RefGen_v2,rn4,ce5,droWil1,Arabidopsis_thaliana_TAIR10,hg_g1k_v37,xenTro1,aplCal1,burkPseu_668,burkPseu_1106A,Homo_sapiens_nuHg19_mtrCRS,eschColi_K12,oryLat2canon,apiMel1,eschColi_K12_DH10B,dipOrd1,micMur1,braFlo1)"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027ref_file\u0027: an invalid option (\u0027bwa-mem-mt-genome\u0027) was selected (valid options: droMoj3,oryLat1,oryza_sativa_japonica_nipponbare_IRGSP4.0,hg18,danRer5,panTro1,Xanthomonas_oryzae_PXO99A,caeRem4,gadMor1,dm3,apiMel3,dasNov3,ce2,papHam1,caePb3,xenTro2,mm7,loxAfr3,Tcas_3.0,equCab2chrM,eschColi_O157H7_EC4115,galGal3,sacCer1,panPan1,pseuAeru_PA7,vicPac2,Tcacao_1.0,caeJap1,droEre2,droEre1,nomLeu1,AaegL1,echTel1,melGal1,Xanthomonas_oryzae_MAFF_311018,musFur1,aptMan1,strPur3,vicPac1,nomLeu2,otoGar3,droGri1,eschColi_CFT073,Amel_4.5,triCas2,hg38,loxAfr1,borEut13,myoLuc2,ci2full,latCha1,caeJap4,hg19,xenTro3,turTru2,tarSyr1,droMoj2,droSim1,burkPseu_K96243,dp4,mm9,taeGut1,bosTau2,IscaW1,gorGor3,oryCun2,caePb1,oryLat2,tetNig1canon,sacCer2,mm9canon,galGal3canon,hg38female,calJac1,burkPseu_1710B,bosTau5,hg38canon,Araly1,Bombyx_mori_p50T_2.0,droVir2,droPer1,sarHar1,droYak1,strPur2,eschColi_O157H7,cerSim1,fr1,danRer6,panTro2,ci2canon,bosTau8,anoCar2,eschColi_O157H7_EDL933,susScr3,tupBel1,Spur_v2.6,galGal2,cb3full,sorAra1,speTri2,hg19female,rheMac3,droGri2,Hydra_JCVI,monDom1,anoCar1,pseuAeru_UCBPP_PA14,canFam1,mm8,monDom4,criGri1,hg19chrX,hg19chrM,caeRem1,27835,caeRem3,bosTau4,CpipJ1,rn3,danRer3,fr2,caeRem2,Homo_sapiens_AK1,allMis1,dasNov1,susScr1,melUnd1,felCat3,hg18chr21,priPac1,mm8canon,ce6,droAna1,Schizosaccharomyces_pombe_1.1,dp3,bordBron,eschColi_O157H7_TW14359,cb3canon,Arabidopsis_thaliana_TAIR9,caePb2,otoGar1,rn3canon,eschColi_APEC_O1,dm2,Sscrofa9.58,galGal2canon,caeJap2,panTro1canon,hg19_rCRS_pUC18_phiX174,felCat4canon,ce7,canFam3,mm7canon,susScr2,ce10,eschColi_K12_W3110,danRer10,tetNig2,canFam2,felCat4,AgamP3,danRer4,rn5,droYak2,bosTau6,petMar1,droAna3,eriEur1,pUC18,saiBol1,panTro2canon,rn4canon,droSec1,hg18canon,baciSubt,Ptrichocarpa_156,bosTau7,venter1,apiMel2,hg17canon,dm6,strePneu_R6,Xanthomonas_oryzae_KACC10331,rn6,oviAri1,hg17,taeGut1canon,panTro3canon,bosTauMd3,droVir3,ce3,hetGla1,ente638,danRer2,mm10,choHof1,bosTau3,nomLeu3,ornAna1,monDom5,ce9,droMoj1,ponAbe2,pseuAeru_PAO1,sacCer3,galGal4,droAna2,geoFor1,tetNig2canon,ailMel1,tetNig1,chrPic1,droVir1,panTro4,equCab2,oryCun1,gasAcu1,anoGam1,caeJap3,equCab1,calJac3canon,felCat8,felCat5,cavPor3,ce8,ce4,mm9female,danRer7,lMaj5,phiX,taeGut2,rheMac2,calJac3,panTro3full,PhumU1,apiMel4,hg19canon,papAnu2,hg18nohaps,Zea_mays_B73_RefGen_v2,rn4,ce5,droWil1,Arabidopsis_thaliana_TAIR10,hg_g1k_v37,xenTro1,aplCal1,burkPseu_668,burkPseu_1106A,Homo_sapiens_nuHg19_mtrCRS,eschColi_K12,oryLat2canon,apiMel1,eschColi_K12_DH10B,dipOrd1,micMur1,braFlo1)", "inputs": {  "alignment_options|A": "2",  "alignment_options|B": "8",  "alignment_options|E": "2",  "alignment_options|E2": "1",  "alignment_options|O": "12",  "alignment_options|O2": "32",  "alignment_options|s": "40",  "alignment_options|z": "400",  "fastq_input|analysis_type_selector": "sr",  "fastq_input|fastq_input1": {   "id": "0ab863285c32580e",   "src": "hda"  },  "fastq_input|fastq_input_selector": "single",  "mapping_options|min_occ_floor": "1000",  "reference_source|ref_file": "bwa-mem-mt-genome",  "reference_source|reference_source_selector": "cached" }, "status": "error", "test_index": 6, "time_seconds": 8.261780738830566, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4", "tool_version": "2.17+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #8)" name="7" time="30.275959014892578">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.020*0.77] collected minimizers[M::mm_idx_gen::0.035*1.26] sorted minimizers[M::main::0.035*1.26] loaded/built the index for 25 target sequence(s)[M::mm_mapopt_update::0.037*1.25] mid_occ = 3[M::mm_idx_stat] kmer size: 15; skip: 5; is_hpc: 0; #seq: 25[M::mm_idx_stat::0.039*1.24] distinct minimizers: 80111 (99.87% are singletons); average occurrences: 1.002; average spacing: 2.935[M::worker_pipeline::0.051*1.34] mapped 25 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x ava-ont -t 2 reference.fa /galaxy/server/database/objects/7/6/a/dataset_76a3958c-ca01-49e4-b620-3ad24b0861d8.dat[M::main] Real time: 0.056 sec; CPU: 0.073 sec; Peak RSS: 0.009 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4 (Test #9)" name="8" time="22.11384606361389">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*0.85] collected minimizers[M::mm_idx_gen::0.006*1.08] sorted minimizers[M::main::0.006*1.08] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.07] mid_occ = 9[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.006*1.07] distinct minimizers: 2920 (98.42% are singletons); average occurrences: 1.022; average spacing: 10.057[M::worker_pipeline::0.053*0.98] mapped 1 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -DP -k19 -w19 -m200 -t 2 -a reference.fa /galaxy/server/database/objects/7/1/0/dataset_710b138a-aa1d-4f93-bcd6-5e72b9acd2ed.dat[M::main] Real time: 0.055 sec; CPU: 0.054 sec; Peak RSS: 0.010 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_FPKM_count/2.6.4.1 (Test #1)" name="0" time="41.46277642250061">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Extract exon regions from  /galaxy/server/database/objects/f/f/c/dataset_ffcba34a-cc25-4056-a3b1-ef4fd0aa01af.dat...Counting total fragment ...  DoneTotal fragment = 20.0                Total exonic fragment = 2.0                  1 transcripts finished 2 transcripts finished 3 transcripts finished 4 transcripts finished 5 transcripts finished 6 transcripts finished 7 transcripts finished
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RNA_fragment_size/2.6.4.1 (Test #1)" name="0" time="24.92550277709961">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_RPKM_saturation/2.6.4.1 (Test #1)" name="0" time="33.83552050590515">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Load BAM file ...  Doneshuffling alignments ... Donesampling 5% (245) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 10% (491) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 15% (737) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 20% (983) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 25% (1229) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 30% (1474) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 35% (1720) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 40% (1966) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 45% (2212) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 50% (2458) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 55% (2703) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 60% (2949) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 65% (3195) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 70% (3441) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 75% (3687) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 80% (3932) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 85% (4178) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 90% (4424) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 95% (4670) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...sampling 100% (4916) fragments ...assign reads to transcripts in /galaxy/server/database/objects/8/1/6/dataset_816649aa-bfbe-4cbb-8fef-aa6b0127d1b2.dat ...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4 (Test #1)" name="0" time="44.07550120353699">
        
            
            <system-out><![CDATA[
            Skip multi-hits:FalseRun wigToBigWig outfile.wig /galaxy/server/database/objects/e/6/9/dataset_e69b4583-8c99-4afb-a03b-b5b95ede9652.dat outfile.bw 
            ]]></system-out>
            <system-err><![CDATA[
            No alignments for chr19_gl000208_random. skippedNo alignments for chr21_gl000210_random. skippedNo alignments for chr6_apd_hap1. skippedProcessing chr13 ...Processing chr12 ...Processing chr11 ...Processing chr10 ...Processing chr17 ...Processing chr16 ...Processing chr15 ...Processing chr14 ...Processing chr19 ...Processing chr18 ...No alignments for chr9_gl000198_random. skippedNo alignments for chrUn_gl000239. skippedNo alignments for chrUn_gl000238. skippedNo alignments for chrUn_gl000233. skippedNo alignments for chrUn_gl000232. skippedNo alignments for chrUn_gl000231. skippedNo alignments for chrUn_gl000230. skippedNo alignments for chrUn_gl000237. skippedNo alignments for chrUn_gl000236. skippedNo alignments for chrUn_gl000235. skippedNo alignments for chrUn_gl000234. skippedNo alignments for chr6_qbl_hap6. skippedNo alignments for chr11_gl000202_random. skippedNo alignments for chr17_gl000206_random. skippedNo alignments for chr6_cox_hap2. skippedNo alignments for chr4_gl000193_random. skippedNo alignments for chrUn_gl000248. skippedNo alignments for chrUn_gl000249. skippedNo alignments for chrUn_gl000246. skippedNo alignments for chrUn_gl000247. skippedNo alignments for chrUn_gl000244. skippedNo alignments for chrUn_gl000245. skippedNo alignments for chrUn_gl000242. skippedNo alignments for chrUn_gl000243. skippedNo alignments for chrUn_gl000240. skippedNo alignments for chrUn_gl000241. skippedNo alignments for chr17_gl000204_random. skippedNo alignments for chr17_ctg5_hap1. skippedNo alignments for chr17_gl000205_random. skippedNo alignments for chr9_gl000199_random. skippedNo alignments for chr9_gl000201_random. skippedProcessing chr8 ...No alignments for chr6_ssto_hap7. skippedNo alignments for chr8_gl000197_random. skippedNo alignments for chr6_dbb_hap3. skippedNo alignments for chr7_gl000195_random. skippedNo alignments for chr1_gl000191_random. skippedNo alignments for chr4_ctg9_hap1. skippedProcessing chr3 ...No alignments for chrUn_gl000229. skippedProcessing chr1 ...No alignments for chr17_gl000203_random. skippedNo alignments for chr4_gl000194_random. skippedProcessing chrY ...Processing chrX ...No alignments for chr9_gl000200_random. skippedProcessing chr9 ...Processing chrM ...No alignments for chr8_gl000196_random. skippedNo alignments for chr6_mann_hap4. skippedNo alignments for chrUn_gl000211. skippedNo alignments for chrUn_gl000213. skippedNo alignments for chrUn_gl000212. skippedNo alignments for chrUn_gl000215. skippedNo alignments for chrUn_gl000214. skippedNo alignments for chrUn_gl000217. skippedNo alignments for chrUn_gl000216. skippedNo alignments for chrUn_gl000219. skippedNo alignments for chrUn_gl000218. skippedNo alignments for chr19_gl000209_random. skippedProcessing chr22 ...Processing chr20 ...Processing chr21 ...No alignments for chr6_mcf_hap5. skippedProcessing chr7 ...Processing chr6 ...Processing chr5 ...Processing chr4 ...No alignments for chrUn_gl000228. skippedProcessing chr2 ...No alignments for chr1_gl000192_random. skippedNo alignments for chrUn_gl000224. skippedNo alignments for chrUn_gl000225. skippedNo alignments for chrUn_gl000226. skippedNo alignments for chrUn_gl000227. skippedNo alignments for chrUn_gl000220. skippedNo alignments for chrUn_gl000221. skippedNo alignments for chrUn_gl000222. skippedNo alignments for chrUn_gl000223. skippedNo alignments for chr18_gl000207_random. skipped/bin/sh: wigToBigWig: not found
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4 (Test #2)" name="1" time="38.09343910217285">
        
            
            <system-out><![CDATA[
            Skip multi-hits:TrueRun wigToBigWig outfile.wig /galaxy/server/database/objects/e/6/9/dataset_e69b4583-8c99-4afb-a03b-b5b95ede9652.dat outfile.bw 
            ]]></system-out>
            <system-err><![CDATA[
            No alignments for chr19_gl000208_random. skippedNo alignments for chr21_gl000210_random. skippedNo alignments for chr6_apd_hap1. skippedProcessing chr13 ...Processing chr12 ...Processing chr11 ...Processing chr10 ...Processing chr17 ...Processing chr16 ...Processing chr15 ...Processing chr14 ...Processing chr19 ...Processing chr18 ...No alignments for chr9_gl000198_random. skippedNo alignments for chrUn_gl000239. skippedNo alignments for chrUn_gl000238. skippedNo alignments for chrUn_gl000233. skippedNo alignments for chrUn_gl000232. skippedNo alignments for chrUn_gl000231. skippedNo alignments for chrUn_gl000230. skippedNo alignments for chrUn_gl000237. skippedNo alignments for chrUn_gl000236. skippedNo alignments for chrUn_gl000235. skippedNo alignments for chrUn_gl000234. skippedNo alignments for chr6_qbl_hap6. skippedNo alignments for chr11_gl000202_random. skippedNo alignments for chr17_gl000206_random. skippedNo alignments for chr6_cox_hap2. skippedNo alignments for chr4_gl000193_random. skippedNo alignments for chrUn_gl000248. skippedNo alignments for chrUn_gl000249. skippedNo alignments for chrUn_gl000246. skippedNo alignments for chrUn_gl000247. skippedNo alignments for chrUn_gl000244. skippedNo alignments for chrUn_gl000245. skippedNo alignments for chrUn_gl000242. skippedNo alignments for chrUn_gl000243. skippedNo alignments for chrUn_gl000240. skippedNo alignments for chrUn_gl000241. skippedNo alignments for chr17_gl000204_random. skippedNo alignments for chr17_ctg5_hap1. skippedNo alignments for chr17_gl000205_random. skippedNo alignments for chr9_gl000199_random. skippedNo alignments for chr9_gl000201_random. skippedProcessing chr8 ...No alignments for chr6_ssto_hap7. skippedNo alignments for chr8_gl000197_random. skippedNo alignments for chr6_dbb_hap3. skippedNo alignments for chr7_gl000195_random. skippedNo alignments for chr1_gl000191_random. skippedNo alignments for chr4_ctg9_hap1. skippedProcessing chr3 ...No alignments for chrUn_gl000229. skippedProcessing chr1 ...No alignments for chr17_gl000203_random. skippedNo alignments for chr4_gl000194_random. skippedProcessing chrY ...Processing chrX ...No alignments for chr9_gl000200_random. skippedProcessing chr9 ...Processing chrM ...No alignments for chr8_gl000196_random. skippedNo alignments for chr6_mann_hap4. skippedNo alignments for chrUn_gl000211. skippedNo alignments for chrUn_gl000213. skippedNo alignments for chrUn_gl000212. skippedNo alignments for chrUn_gl000215. skippedNo alignments for chrUn_gl000214. skippedNo alignments for chrUn_gl000217. skippedNo alignments for chrUn_gl000216. skippedNo alignments for chrUn_gl000219. skippedNo alignments for chrUn_gl000218. skippedNo alignments for chr19_gl000209_random. skippedProcessing chr22 ...Processing chr20 ...Processing chr21 ...No alignments for chr6_mcf_hap5. skippedProcessing chr7 ...Processing chr6 ...Processing chr5 ...Processing chr4 ...No alignments for chrUn_gl000228. skippedProcessing chr2 ...No alignments for chr1_gl000192_random. skippedNo alignments for chrUn_gl000224. skippedNo alignments for chrUn_gl000225. skippedNo alignments for chrUn_gl000226. skippedNo alignments for chrUn_gl000227. skippedNo alignments for chrUn_gl000220. skippedNo alignments for chrUn_gl000221. skippedNo alignments for chrUn_gl000222. skippedNo alignments for chrUn_gl000223. skippedNo alignments for chr18_gl000207_random. skipped/bin/sh: wigToBigWig: not found
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4 (Test #3)" name="2" time="44.19759964942932">
        
            
            <system-out><![CDATA[
            Skip multi-hits:False
            ]]></system-out>
            <system-err><![CDATA[
            No alignments for chr19_gl000208_random. skippedNo alignments for chr21_gl000210_random. skippedNo alignments for chr6_apd_hap1. skippedProcessing chr13 ...Processing chr12 ...Processing chr11 ...Processing chr10 ...Processing chr17 ...Processing chr16 ...Processing chr15 ...Processing chr14 ...Processing chr19 ...Processing chr18 ...No alignments for chr9_gl000198_random. skippedNo alignments for chrUn_gl000239. skippedNo alignments for chrUn_gl000238. skippedNo alignments for chrUn_gl000233. skippedNo alignments for chrUn_gl000232. skippedNo alignments for chrUn_gl000231. skippedNo alignments for chrUn_gl000230. skippedNo alignments for chrUn_gl000237. skippedNo alignments for chrUn_gl000236. skippedNo alignments for chrUn_gl000235. skippedNo alignments for chrUn_gl000234. skippedNo alignments for chr6_qbl_hap6. skippedNo alignments for chr11_gl000202_random. skippedNo alignments for chr17_gl000206_random. skippedNo alignments for chr6_cox_hap2. skippedNo alignments for chr4_gl000193_random. skippedNo alignments for chrUn_gl000248. skippedNo alignments for chrUn_gl000249. skippedNo alignments for chrUn_gl000246. skippedNo alignments for chrUn_gl000247. skippedNo alignments for chrUn_gl000244. skippedNo alignments for chrUn_gl000245. skippedNo alignments for chrUn_gl000242. skippedNo alignments for chrUn_gl000243. skippedNo alignments for chrUn_gl000240. skippedNo alignments for chrUn_gl000241. skippedNo alignments for chr17_gl000204_random. skippedNo alignments for chr17_ctg5_hap1. skippedNo alignments for chr17_gl000205_random. skippedNo alignments for chr9_gl000199_random. skippedNo alignments for chr9_gl000201_random. skippedProcessing chr8 ...No alignments for chr6_ssto_hap7. skippedNo alignments for chr8_gl000197_random. skippedNo alignments for chr6_dbb_hap3. skippedNo alignments for chr7_gl000195_random. skippedNo alignments for chr1_gl000191_random. skippedNo alignments for chr4_ctg9_hap1. skippedProcessing chr3 ...No alignments for chrUn_gl000229. skippedProcessing chr1 ...No alignments for chr17_gl000203_random. skippedNo alignments for chr4_gl000194_random. skippedProcessing chrY ...Processing chrX ...No alignments for chr9_gl000200_random. skippedProcessing chr9 ...Processing chrM ...No alignments for chr8_gl000196_random. skippedNo alignments for chr6_mann_hap4. skippedNo alignments for chrUn_gl000211. skippedNo alignments for chrUn_gl000213. skippedNo alignments for chrUn_gl000212. skippedNo alignments for chrUn_gl000215. skippedNo alignments for chrUn_gl000214. skippedNo alignments for chrUn_gl000217. skippedNo alignments for chrUn_gl000216. skippedNo alignments for chrUn_gl000219. skippedNo alignments for chrUn_gl000218. skippedNo alignments for chr19_gl000209_random. skippedProcessing chr22 ...Processing chr20 ...Processing chr21 ...No alignments for chr6_mcf_hap5. skippedProcessing chr7 ...Processing chr6 ...Processing chr5 ...Processing chr4 ...No alignments for chrUn_gl000228. skippedProcessing chr2 ...No alignments for chr1_gl000192_random. skippedNo alignments for chrUn_gl000224. skippedNo alignments for chrUn_gl000225. skippedNo alignments for chrUn_gl000226. skippedNo alignments for chrUn_gl000227. skippedNo alignments for chrUn_gl000220. skippedNo alignments for chrUn_gl000221. skippedNo alignments for chrUn_gl000222. skippedNo alignments for chrUn_gl000223. skippedNo alignments for chr18_gl000207_random. skipped/bin/sh: wigToBigWig: not found/bin/sh: wigToBigWig: not found
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam2wig/2.6.4 (Test #4)" name="3" time="42.96379280090332">
        
            
            <system-out><![CDATA[
            Skip multi-hits:FalseRun wigToBigWig outfile.wig /galaxy/server/database/objects/e/6/9/dataset_e69b4583-8c99-4afb-a03b-b5b95ede9652.dat outfile.bw 
            ]]></system-out>
            <system-err><![CDATA[
            Calcualte wigsum ... No alignments for chr19_gl000208_random. skippedNo alignments for chr21_gl000210_random. skippedNo alignments for chr6_apd_hap1. skippedProcessing chr13 ...Processing chr12 ...Processing chr11 ...Processing chr10 ...Processing chr17 ...Processing chr16 ...Processing chr15 ...Processing chr14 ...Processing chr19 ...Processing chr18 ...No alignments for chr9_gl000198_random. skippedNo alignments for chrUn_gl000239. skippedNo alignments for chrUn_gl000238. skippedNo alignments for chrUn_gl000233. skippedNo alignments for chrUn_gl000232. skippedNo alignments for chrUn_gl000231. skippedNo alignments for chrUn_gl000230. skippedNo alignments for chrUn_gl000237. skippedNo alignments for chrUn_gl000236. skippedNo alignments for chrUn_gl000235. skippedNo alignments for chrUn_gl000234. skippedNo alignments for chr6_qbl_hap6. skippedNo alignments for chr11_gl000202_random. skippedNo alignments for chr17_gl000206_random. skippedNo alignments for chr6_cox_hap2. skippedNo alignments for chr4_gl000193_random. skippedNo alignments for chrUn_gl000248. skippedNo alignments for chrUn_gl000249. skippedNo alignments for chrUn_gl000246. skippedNo alignments for chrUn_gl000247. skippedNo alignments for chrUn_gl000244. skippedNo alignments for chrUn_gl000245. skippedNo alignments for chrUn_gl000242. skippedNo alignments for chrUn_gl000243. skippedNo alignments for chrUn_gl000240. skippedNo alignments for chrUn_gl000241. skippedNo alignments for chr17_gl000204_random. skippedNo alignments for chr17_ctg5_hap1. skippedNo alignments for chr17_gl000205_random. skippedNo alignments for chr9_gl000199_random. skippedNo alignments for chr9_gl000201_random. skippedProcessing chr8 ...No alignments for chr6_ssto_hap7. skippedNo alignments for chr8_gl000197_random. skippedNo alignments for chr6_dbb_hap3. skippedNo alignments for chr7_gl000195_random. skippedNo alignments for chr1_gl000191_random. skippedNo alignments for chr4_ctg9_hap1. skippedProcessing chr3 ...No alignments for chrUn_gl000229. skippedProcessing chr1 ...No alignments for chr17_gl000203_random. skippedNo alignments for chr4_gl000194_random. skippedProcessing chrY ...Processing chrX ...No alignments for chr9_gl000200_random. skippedProcessing chr9 ...Processing chrM ...No alignments for chr8_gl000196_random. skippedNo alignments for chr6_mann_hap4. skippedNo alignments for chrUn_gl000211. skippedNo alignments for chrUn_gl000213. skippedNo alignments for chrUn_gl000212. skippedNo alignments for chrUn_gl000215. skippedNo alignments for chrUn_gl000214. skippedNo alignments for chrUn_gl000217. skippedNo alignments for chrUn_gl000216. skippedNo alignments for chrUn_gl000219. skippedNo alignments for chrUn_gl000218. skippedNo alignments for chr19_gl000209_random. skippedProcessing chr22 ...Processing chr20 ...Processing chr21 ...No alignments for chr6_mcf_hap5. skippedProcessing chr7 ...Processing chr6 ...Processing chr5 ...Processing chr4 ...No alignments for chrUn_gl000228. skippedProcessing chr2 ...No alignments for chr1_gl000192_random. skippedNo alignments for chrUn_gl000224. skippedNo alignments for chrUn_gl000225. skippedNo alignments for chrUn_gl000226. skippedNo alignments for chrUn_gl000227. skippedNo alignments for chrUn_gl000220. skippedNo alignments for chrUn_gl000221. skippedNo alignments for chrUn_gl000222. skippedNo alignments for chrUn_gl000223. skippedNo alignments for chr18_gl000207_random. skippedtotal wigsum is:1960.0No alignments for chr19_gl000208_random. skippedNo alignments for chr21_gl000210_random. skippedNo alignments for chr6_apd_hap1. skippedProcessing chr13 ...Processing chr12 ...Processing chr11 ...Processing chr10 ...Processing chr17 ...Processing chr16 ...Processing chr15 ...Processing chr14 ...Processing chr19 ...Processing chr18 ...No alignments for chr9_gl000198_random. skippedNo alignments for chrUn_gl000239. skippedNo alignments for chrUn_gl000238. skippedNo alignments for chrUn_gl000233. skippedNo alignments for chrUn_gl000232. skippedNo alignments for chrUn_gl000231. skippedNo alignments for chrUn_gl000230. skippedNo alignments for chrUn_gl000237. skippedNo alignments for chrUn_gl000236. skippedNo alignments for chrUn_gl000235. skippedNo alignments for chrUn_gl000234. skippedNo alignments for chr6_qbl_hap6. skippedNo alignments for chr11_gl000202_random. skippedNo alignments for chr17_gl000206_random. skippedNo alignments for chr6_cox_hap2. skippedNo alignments for chr4_gl000193_random. skippedNo alignments for chrUn_gl000248. skippedNo alignments for chrUn_gl000249. skippedNo alignments for chrUn_gl000246. skippedNo alignments for chrUn_gl000247. skippedNo alignments for chrUn_gl000244. skippedNo alignments for chrUn_gl000245. skippedNo alignments for chrUn_gl000242. skippedNo alignments for chrUn_gl000243. skippedNo alignments for chrUn_gl000240. skippedNo alignments for chrUn_gl000241. skippedNo alignments for chr17_gl000204_random. skippedNo alignments for chr17_ctg5_hap1. skippedNo alignments for chr17_gl000205_random. skippedNo alignments for chr9_gl000199_random. skippedNo alignments for chr9_gl000201_random. skippedProcessing chr8 ...No alignments for chr6_ssto_hap7. skippedNo alignments for chr8_gl000197_random. skippedNo alignments for chr6_dbb_hap3. skippedNo alignments for chr7_gl000195_random. skippedNo alignments for chr1_gl000191_random. skippedNo alignments for chr4_ctg9_hap1. skippedProcessing chr3 ...No alignments for chrUn_gl000229. skippedProcessing chr1 ...No alignments for chr17_gl000203_random. skippedNo alignments for chr4_gl000194_random. skippedProcessing chrY ...Processing chrX ...No alignments for chr9_gl000200_random. skippedProcessing chr9 ...Processing chrM ...No alignments for chr8_gl000196_random. skippedNo alignments for chr6_mann_hap4. skippedNo alignments for chrUn_gl000211. skippedNo alignments for chrUn_gl000213. skippedNo alignments for chrUn_gl000212. skippedNo alignments for chrUn_gl000215. skippedNo alignments for chrUn_gl000214. skippedNo alignments for chrUn_gl000217. skippedNo alignments for chrUn_gl000216. skippedNo alignments for chrUn_gl000219. skippedNo alignments for chrUn_gl000218. skippedNo alignments for chr19_gl000209_random. skippedProcessing chr22 ...Processing chr20 ...Processing chr21 ...No alignments for chr6_mcf_hap5. skippedProcessing chr7 ...Processing chr6 ...Processing chr5 ...Processing chr4 ...No alignments for chrUn_gl000228. skippedProcessing chr2 ...No alignments for chr1_gl000192_random. skippedNo alignments for chrUn_gl000224. skippedNo alignments for chrUn_gl000225. skippedNo alignments for chrUn_gl000226. skippedNo alignments for chrUn_gl000227. skippedNo alignments for chrUn_gl000220. skippedNo alignments for chrUn_gl000221. skippedNo alignments for chrUn_gl000222. skippedNo alignments for chrUn_gl000223. skippedNo alignments for chr18_gl000207_random. skipped/bin/sh: wigToBigWig: not found
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_bam_stat/2.6.4 (Test #1)" name="0" time="35.5111882686615">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Load BAM file ...  Done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile/2.6.4 (Test #1)" name="0" time="58.257113218307495">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Load BAM file ...  DoneTotoal reads used: 40
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_clipping_profile/2.6.4 (Test #2)" name="1" time="34.13756084442139">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Load BAM file ...  DoneTotoal reads used: 40
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_deletion_profile/2.6.4 (Test #1)" name="0" time="31.37039065361023">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Process BAM file ...  Total reads used: 0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage/2.6.4.3 (Test #1)" name="0" time="35.364235639572144">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            @ 2021-05-01 17:52:06: Read BED file (reference gene model) ...@ 2021-05-01 17:52:06: Total 7 transcripts loaded@ 2021-05-01 17:52:06: Get BAM file(s) ...pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam@ 2021-05-01 17:52:06: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam ...SampleSkewnesspairend_strandspecific_51mer_hg19_chr1_1_100000_bam3.366683083597443@ 2021-05-01 17:52:06: Running R script ...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage/2.6.4.3 (Test #2)" name="1" time="57.61302471160889">
        
            
            <system-out><![CDATA[
            null device           1 null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            @ 2021-05-01 17:52:29: Read BED file (reference gene model) ...@ 2021-05-01 17:52:29: Total 7 transcripts loaded@ 2021-05-01 17:52:29: Get BAM file(s) ...pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bampairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bampairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam@ 2021-05-01 17:52:29: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.bam ...@ 2021-05-01 17:52:29: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.1.bam ...@ 2021-05-01 17:52:29: Processing pairend_strandspecific_51mer_hg19_chr1_1-100000_bam.2.bam ...SampleSkewnesspairend_strandspecific_51mer_hg19_chr1_1_100000_bam3.366683083597443pairend_strandspecific_51mer_hg19_chr1_1_100000_bam.13.366683083597443pairend_strandspecific_51mer_hg19_chr1_1_100000_bam.23.366683083597443@ 2021-05-01 17:52:29: Running R script ...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_geneBody_coverage2/2.6.4.1 (Test #1)" name="0" time="61.28209662437439">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            calculating coverage over gene body ...  1 genes finished  2 genes finished  5 genes finished  6 genes finished  7 genes finished
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_infer_experiment/2.6.4.1 (Test #1)" name="0" time="53.57201433181763">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Reading reference gene model /galaxy/server/database/objects/b/1/9/dataset_b19e7368-83fe-44a4-b8ae-c4414e2ec85f.dat ... DoneLoading SAM/BAM file ...  FinishedTotal 30 usable reads were sampled
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_inner_distance/2.6.4.1 (Test #1)" name="0" time="32.94260811805725">
        
            
            <system-out><![CDATA[
            NameMeanMediansdoutput96.47368421052636787.858705014265null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Get exon regions from /galaxy/server/database/objects/6/5/0/dataset_65067297-0c46-47bb-a32f-383d2df00937.dat ...Load BAM file ...  DoneTotal read pairs  used 20
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_insertion_profile/2.6.4 (Test #1)" name="0" time="19.826102018356323">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Load BAM file ...  DoneTotoal reads used: 40
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_annotation/2.6.4.1 (Test #1)" name="0" time="60.707664251327515">
        
            
            <system-out><![CDATA[
            null device           1 null device           1 total = 4
            ]]></system-out>
            <system-err><![CDATA[
            Reading reference bed file:  /galaxy/server/database/objects/b/1/9/dataset_b19e7368-83fe-44a4-b8ae-c4414e2ec85f.dat  ...  DoneLoad BAM file ...  Done===================================================================Total splicing  Events:4Known Splicing Events:1Partial Novel Splicing Events:1Novel Splicing Events:1Total splicing  Junctions:3Known Splicing Junctions:1Partial Novel Splicing Junctions:1Novel Splicing Junctions:1===================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_junction_saturation/2.6.4.1 (Test #1)" name="0" time="54.89545011520386">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            reading reference bed file:  /galaxy/server/database/objects/a/7/9/dataset_a7997054-c804-4411-bb10-fd3970d3f557.dat  ...  Done! Total 14 known splicing junctions.Load BAM file ...  Doneshuffling alignments ... Donesampling 5% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.sampling 10% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.sampling 15% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.sampling 20% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.sampling 25% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.sampling 30% (0) splicing reads. 0 splicing junctions. 0 known splicing junctions. 0 novel splicing junctions.sampling 35% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.sampling 40% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.sampling 45% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.sampling 50% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.sampling 55% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.sampling 60% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.sampling 65% (1) splicing reads. 1 splicing junctions. 0 known splicing junctions. 1 novel splicing junctions.sampling 70% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.sampling 75% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.sampling 80% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.sampling 85% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.sampling 90% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.sampling 95% (2) splicing reads. 2 splicing junctions. 1 known splicing junctions. 1 novel splicing junctions.sampling 100% (3) splicing reads. 3 splicing junctions. 1 known splicing junctions. 2 novel splicing junctions.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_mismatch_profile/2.6.4 (Test #1)" name="0" time="25.952401161193848">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Process BAM file ...  No mismatches found
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_GC/2.6.4 (Test #1)" name="0" time="26.321418046951294">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Read BAM file ...  Donewriting GC content ...writing R script ...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_NVC/2.6.4 (Test #1)" name="0" time="60.03019070625305">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Read BAM file ...  Donegenerating data matrix ...generating R script  ...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_distribution/2.6.4.1 (Test #1)" name="0" time="34.98974251747131">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            processing /galaxy/server/database/objects/d/5/1/dataset_d5162950-7341-4a05-8b89-6b3420b10510.dat ... Doneprocessing /galaxy/server/database/objects/4/5/c/dataset_45c0e812-96f1-4c34-b8de-0b955187789e.dat ... Finished
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_duplication/2.6.4 (Test #1)" name="0" time="60.61472201347351">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Load BAM file ...  Donereport duplicte rate based on sequence ...report duplicte rate based on mapping  ...generate R script ...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4 (Test #1)" name="0" time="15.613383769989014">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... Done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4 (Test #2)" name="1" time="35.02355980873108">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq_gz file ... Done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4 (Test #3)" name="2" time="28.62130570411682">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... DoneCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R2_fastq file ... Done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_hexamer/2.6.4 (Test #4)" name="3" time="25.360414505004883">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Calculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq file ... DoneCalculate hexamer of pairend_strandspecific_51mer_hg19_chr1_1-100000_R1_fastq.1 file ... Done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_read_quality/2.6.4 (Test #1)" name="0" time="31.91274666786194">
        
            
            <system-out><![CDATA[
            null device           1 null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            Read BAM file ...  Done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/nilesh/rseqc/rseqc_tin/2.6.4.1 (Test #1)" name="0" time="38.39049816131592">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            @ 2021-05-01 17:53:14: Get BAM file(s) ...Total 1 BAM file(s):input.bam@ 2021-05-01 17:53:14: Processing input.bam 2 transcripts finished
            ]]></system-err>
        
    </testcase>
    
</testsuite>